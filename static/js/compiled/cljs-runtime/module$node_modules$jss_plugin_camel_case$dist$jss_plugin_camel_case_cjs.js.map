{
"version":3,
"file":"module$node_modules$jss_plugin_camel_case$dist$jss_plugin_camel_case_cjs.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,wEAAf,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBrIC,QAASA,YAAW,CAACC,KAAD,CAAQ,CAC1B,IAAIC,UAAY,EAAhB,CAESC,IAAT,KAASA,IAAT,GAAiBF,MAAjB,CAAwB,CACtB,IAAIG,IAA6B,CAAvB,GAAAD,IAAA,CAAKE,OAAL,CAAa,IAAb,CAAA,CAA2BF,IAA3B,CAAkCG,SAAA,CAAUH,IAAV,CAC5CD,UAAA,CAAUE,GAAV,CAAA,CAAiBH,KAAA,CAAME,IAAN,CAFK,CAKpBF,KAAJ,CAAUM,SAAV,GACMC,KAAA,CAAMC,OAAN,CAAcR,KAAd,CAAoBM,SAApB,CAAJ,CAAoCL,SAApC,CAA8CK,SAA9C,CAA0DN,KAAA,CAAMM,SAAN,CAAgBG,GAAhB,CAAoBV,WAApB,CAA1D,CAAgGE,SAAhG,CAA0GK,SAA1G,CAAsHP,WAAA,CAAYC,KAAZ,CAAkBM,SAAlB,CADxH,CAIA,OAAOL,UAZmB,CAb5BS,MAAA,CAAOC,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAAEc,MAAO,CAAA,CAAT,CAA7C,CAIA,KAAIP;AAFJQ,QAAyB,CAACC,EAAD,CAAK,CAAE,MAAQA,GAAD,EAAsB,QAAtB,GAAQ,MAAOA,GAAf,EAAmC,SAAnC,EAAgDA,GAAhD,CAAsDA,EAAA,CAAG,SAAH,CAAtD,CAAsEA,EAA/E,CAEd,CAAgBlB,OAAA,CAAQ,oDAAR,CAAhB,CA+DhBE,QAAA,CAAQiB,OAAR,CAjCAC,QAAkB,EAAG,CA2BnB,MAAO,CACLC,eA3BFA,QAAuB,CAACjB,KAAD,CAAQ,CAC7B,GAAIO,KAAA,CAAMC,OAAN,CAAcR,KAAd,CAAJ,CAA0B,CAExB,IAAK,IAAIkB,MAAQ,CAAjB,CAAoBA,KAApB,CAA4BlB,KAA5B,CAAkCmB,MAAlC,CAA0CD,KAAA,EAA1C,CACElB,KAAA,CAAMkB,KAAN,CAAA,CAAenB,WAAA,CAAYC,KAAA,CAAMkB,KAAN,CAAZ,CAGjB,OAAOlB,MANiB,CAS1B,MAAOD,YAAA,CAAYC,KAAZ,CAVsB,CA0BxB,CAELoB,cAfFA,QAAsB,CAACR,KAAD,CAAQV,IAAR,CAAcmB,IAAd,CAAoB,CACxC,GAA2B,CAA3B,GAAInB,IAAA,CAAKE,OAAL,CAAa,IAAb,CAAJ,CACE,MAAOQ,MAGT,KAAIU,eAAiBjB,SAAA,CAAUH,IAAV,CAErB,IAAIA,IAAJ,GAAaoB,cAAb,CAA6B,MAAOV,MACpCS;IAAA,CAAKnB,IAAL,CAAUoB,cAAV,CAA0BV,KAA1B,CAEA,OAAO,KAViC,CAanC,CA3BY,CArCgH;",
"sources":["node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jss_plugin_camel_case$dist$jss_plugin_camel_case_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hyphenate = _interopDefault(require('hyphenate-style-name'));\n\n/**\n * Convert camel cased property names to dash separated.\n *\n * @param {Object} style\n * @return {Object}\n */\n\nfunction convertCase(style) {\n  var converted = {};\n\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n *\n * @param {Rule} rule\n */\n\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n\n      return style;\n    }\n\n    return convertCase(style);\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexports.default = camelCase;\n\n};"],
"names":["shadow$provide","global","require","module","exports","convertCase","style","converted","prop","key","indexOf","hyphenate","fallbacks","Array","isArray","map","Object","defineProperty","value","_interopDefault","ex","default","camelCase","onProcessStyle","index","length","onChangeValue","rule","hyphenatedProp"]
}
