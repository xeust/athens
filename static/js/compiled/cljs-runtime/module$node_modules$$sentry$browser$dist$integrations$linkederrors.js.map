{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$integrations$linkederrors.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CACIO,OAASP,OAAA,CAAQ,6CAAR,CADb,CAEIQ,QAAUR,OAAA,CAAQ,8CAAR,CAFd,CAGIS,UAAYT,OAAA,CAAQ,kDAAR,CAHhB,CAIIU,WAAaV,OAAA,CAAQ,mDAAR,CAIbW,OAAAA;AAA8B,QAAS,EAAG,CAI1CA,QAASA,aAAY,CAACC,OAAD,CAAU,CACX,IAAK,EAArB,GAAIA,OAAJ,GAA0BA,OAA1B,CAAoC,EAApC,CAIA,KAAA,CAAKC,IAAL,CAAYF,YAAZ,CAAyBG,EACzB,KAAA,CAAKC,IAAL,CAAYH,OAAZ,CAAoBI,GAApB,EAbUC,OAcV,KAAA,CAAKC,MAAL,CAAcN,OAAd,CAAsBO,KAAtB,EAbYC,CAMe,CAY/BT,YAAA,CAAaU,SAAb,CAAuBC,SAAvB,CAAmCC,QAAS,EAAG,CAC3ChB,MAAA,CAAOiB,uBAAP,CAA+B,QAAS,CAACC,KAAD,CAAQC,IAAR,CAAc,CAClD,IAAIC,KAAOpB,MAAA,CAAOqB,aAAP,EAAA,CAAuBC,cAAvB,CAAsClB,YAAtC,CACX,OAAIgB,KAAJ,CACWA,IAAA,CAAKG,QAAL,CAAcL,KAAd,CAAqBC,IAArB,CADX,CAGOD,KAL2C,CAAtD,CAD2C,CAY/Cd,aAAA,CAAaU,SAAb,CAAuBS,QAAvB,CAAkCC,QAAS,CAACN,KAAD,CAAQC,IAAR,CAAc,CACrD,GAAI,EAACD,KAAD,CAAOO,SAAP,EAAqBP,KAArB,CAA2BO,SAA3B,CAAqCC,MAArC,EAAgDP,IAAhD,EAAyDlB,OAAA,CAAQ0B,YAAR,CAAqBR,IAArB,CAA0BS,iBAA1B;AAA6CC,KAA7C,CAAzD,CAAJ,CACI,MAAOX,MAEPY,KAAAA,CAAe,IAAA,CAAKC,cAAL,CAAoBZ,IAApB,CAAyBS,iBAAzB,CAA4C,IAA5C,CAAiDpB,IAAjD,CACnBU,MAAA,CAAMO,SAAN,CAAgBC,MAAhB,CAAyB3B,OAAA,CAAQiC,QAAR,CAAiBF,IAAjB,CAA+BZ,KAA/B,CAAqCO,SAArC,CAA+CC,MAA/C,CACzB,OAAOR,MAN8C,CAWzDd,aAAA,CAAaU,SAAb,CAAuBiB,cAAvB,CAAwCE,QAAS,CAACC,KAAD,CAAQzB,GAAR,CAAa0B,KAAb,CAAoB,CACnD,IAAK,EAAnB,GAAIA,KAAJ,GAAwBA,KAAxB,CAAgC,EAAhC,CACA,IAAI,CAAClC,OAAA,CAAQ0B,YAAR,CAAqBO,KAAA,CAAMzB,GAAN,CAArB,CAAiCoB,KAAjC,CAAL,EAAgDM,KAAhD,CAAsDC,MAAtD,CAA+D,CAA/D,EAAoE,IAApE,CAAyEzB,MAAzE,CACI,MAAOwB,MAEX,KAAIE,WAAalC,UAAA,CAAWmC,iBAAX,CAA6BJ,KAAA,CAAMzB,GAAN,CAA7B,CACbgB,WAAAA,CAAYvB,SAAA,CAAUqC,uBAAV,CAAkCF,UAAlC,CAChB,OAAO,KAAA,CAAKN,cAAL,CAAoBG,KAAA,CAAMzB,GAAN,CAApB,CAAgCA,GAAhC,CAAqCV,OAAA,CAAQiC,QAAR,CAAiB,CAACP,UAAD,CAAjB;AAA8BU,KAA9B,CAArC,CAP0D,CAYrE/B,aAAA,CAAaG,EAAb,CAAkB,cAClB,OAAOH,aApDmC,CAAZ,EAsDlCT,QAAA,CAAQS,YAAR,CAAuBA,MAhEwG;",
"sources":["node_modules/@sentry/browser/dist/integrations/linkederrors.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$integrations$linkederrors\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar utils_1 = require(\"@sentry/utils\");\nvar parsers_1 = require(\"../parsers\");\nvar tracekit_1 = require(\"../tracekit\");\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        core_1.addGlobalEventProcessor(function (event, hint) {\n            var self = core_1.getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !utils_1.isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!utils_1.isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = tracekit_1.computeStackTrace(error[key]);\n        var exception = parsers_1.exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexports.LinkedErrors = LinkedErrors;\n//# sourceMappingURL=linkederrors.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","utils_1","parsers_1","tracekit_1","LinkedErrors","options","name","id","_key","key","DEFAULT_KEY","_limit","limit","DEFAULT_LIMIT","prototype","setupOnce","LinkedErrors.prototype.setupOnce","addGlobalEventProcessor","event","hint","self","getCurrentHub","getIntegration","_handler","LinkedErrors.prototype._handler","exception","values","isInstanceOf","originalException","Error","linkedErrors","_walkErrorTree","__spread","LinkedErrors.prototype._walkErrorTree","error","stack","length","stacktrace","computeStackTrace","exceptionFromStacktrace"]
}
