{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$logger.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,OAASN,OAAA,CAAQ,6CAAR,CAETD,OAAJ,CAAaO,MAAA,CAAOC,eAAP,EAITC,QAAAA,CAAwB,QAAS,EAAG,CAEpCA,QAASA,OAAM,EAAG,CACd,IAAA,CAAKC,QAAL,CAAgB,CAAA,CADF,CAIlBD,MAAA,CAAOE,SAAP,CAAiBC,OAAjB,CAA2BC,QAAS,EAAG,CACnC,IAAA,CAAKH,QAAL,CAAgB,CAAA,CADmB,CAIvCD,OAAA,CAAOE,SAAP,CAAiBG,MAAjB,CAA0BC,QAAS,EAAG,CAClC,IAAA,CAAKL,QAAL,CAAgB,CAAA,CADkB,CAItCD,OAAA,CAAOE,SAAP,CAAiBK,GAAjB,CAAuBC,QAAS,EAAG,CAE/B,IADA,IAAIC,KAAO,EAAX,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAtB,CAAgCC,MAAhC,CAAwCF,EAAA,EAAxC,CACID,IAAA,CAAKC,EAAL,CAAA;AAAWC,SAAA,CAAUD,EAAV,CAEV,KAAL,CAAUT,QAAV,EAGAH,MAAA,CAAOe,cAAP,CAAsB,QAAS,EAAG,CAC9BtB,MAAA,CAAOuB,OAAP,CAAeP,GAAf,CAAmB,uBAAnB,CAAwCE,IAAA,CAAKM,IAAL,CAAU,GAAV,CAAxC,CAD8B,CAAlC,CAR+B,CAanCf,OAAA,CAAOE,SAAP,CAAiBc,IAAjB,CAAwBC,QAAS,EAAG,CAEhC,IADA,IAAIR,KAAO,EAAX,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAtB,CAAgCC,MAAhC,CAAwCF,EAAA,EAAxC,CACID,IAAA,CAAKC,EAAL,CAAA,CAAWC,SAAA,CAAUD,EAAV,CAEV,KAAL,CAAUT,QAAV,EAGAH,MAAA,CAAOe,cAAP,CAAsB,QAAS,EAAG,CAC9BtB,MAAA,CAAOuB,OAAP,CAAeE,IAAf,CAAoB,wBAApB,CAA0CP,IAAA,CAAKM,IAAL,CAAU,GAAV,CAA1C,CAD8B,CAAlC,CARgC,CAapCf,OAAA,CAAOE,SAAP,CAAiBgB,KAAjB,CAAyBC,QAAS,EAAG,CAEjC,IADA,IAAIV,KAAO,EAAX,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAtB,CAAgCC,MAAhC,CAAwCF,EAAA,EAAxC,CACID,IAAA,CAAKC,EAAL,CAAA,CAAWC,SAAA,CAAUD,EAAV,CAEV,KAAL,CAAUT,QAAV,EAGAH,MAAA,CAAOe,cAAP,CAAsB,QAAS,EAAG,CAC9BtB,MAAA,CAAOuB,OAAP,CAAeI,KAAf,CAAqB,yBAArB;AAA4CT,IAAA,CAAKM,IAAL,CAAU,GAAV,CAA5C,CAD8B,CAAlC,CARiC,CAYrC,OAAOf,OApD6B,CAAZ,EAuD5BT,OAAA,CAAO6B,UAAP,CAAoB7B,MAApB,CAA2B6B,UAA3B,EAAyC,EACrCC,QAAAA,CAAS9B,MAAT8B,CAAgBD,UAAhBC,CAA2BA,MAA3BA,GAAsC9B,MAAtC8B,CAA6CD,UAA7CC,CAAwDA,MAAxDA,CAAiE,IAAIrB,OAArEqB,CACJ3B,QAAA,CAAQ2B,MAAR,CAAiBA,OAlEyF;",
"sources":["node_modules/@sentry/utils/dist/logger.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$logger\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar misc_1 = require(\"./misc\");\n// TODO: Implement different loggers for different environments\nvar global = misc_1.getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        misc_1.consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' '));\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexports.logger = logger;\n//# sourceMappingURL=logger.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","misc_1","getGlobalObject","Logger","_enabled","prototype","disable","Logger.prototype.disable","enable","Logger.prototype.enable","log","Logger.prototype.log","args","_i","arguments","length","consoleSandbox","console","join","warn","Logger.prototype.warn","error","Logger.prototype.error","__SENTRY__","logger"]
}
