{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$request.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/browser/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$request\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar utils_1 = require(\"@sentry/utils\");\nvar utils_2 = require(\"../utils\");\nexports.DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexports.defaultRequestInstrumentionOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: exports.DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nfunction registerRequestInstrumentation(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = tslib_1.__assign(tslib_1.__assign({}, exports.defaultRequestInstrumentionOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return utils_1.isMatchingPattern(url, origin); }) &&\n                !utils_1.isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        utils_1.addInstrumentationHandler({\n            callback: function (handlerData) {\n                fetchCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'fetch',\n        });\n    }\n    if (traceXHR) {\n        utils_1.addInstrumentationHandler({\n            callback: function (handlerData) {\n                xhrCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'xhr',\n        });\n    }\n}\nexports.registerRequestInstrumentation = registerRequestInstrumentation;\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(handlerData, shouldCreateSpan, spans) {\n    var _a;\n    var currentClientOptions = (_a = hub_1.getCurrentHub()\n        .getClient()) === null || _a === void 0 ? void 0 : _a.getOptions();\n    if (!(currentClientOptions && utils_2.hasTracingEnabled(currentClientOptions)) ||\n        !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp && handlerData.fetchData.__span) {\n        var span = spans[handlerData.fetchData.__span];\n        if (span) {\n            var response = handlerData.response;\n            if (response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(response.status);\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.fetchData.__span];\n        }\n        return;\n    }\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (utils_1.isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = tslib_1.__spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = tslib_1.__assign(tslib_1.__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\nexports.fetchCallback = fetchCallback;\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(handlerData, shouldCreateSpan, spans) {\n    var _a;\n    var currentClientOptions = (_a = hub_1.getCurrentHub()\n        .getClient()) === null || _a === void 0 ? void 0 : _a.getOptions();\n    if (!(currentClientOptions && utils_2.hasTracingEnabled(currentClientOptions)) ||\n        !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url)) ||\n        handlerData.xhr.__sentry_own_request__) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp && handlerData.xhr.__sentry_xhr_span_id__) {\n        var span = spans[handlerData.xhr.__sentry_xhr_span_id__];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.xhr.__sentry_xhr_span_id__];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\nexports.xhrCallback = xhrCallback;\n//# sourceMappingURL=request.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","fetchCallback","handlerData","shouldCreateSpan","spans","_a","currentClientOptions","hub_1","getCurrentHub","getClient","getOptions","utils_2","hasTracingEnabled","fetchData","url","endTimestamp","__span","span","response","setHttpStatus","status","finish","activeTransaction","getActiveTransaction","startChild","data","tslib_1","__assign","type","description","method","op","spanId","request","args","options","headers","utils_1","isInstanceOf","Request","append","toTraceparent","Array","isArray","__spread","xhrCallback","xhr","__sentry_xhr__","__sentry_own_request__","__sentry_xhr_span_id__","status_code","setRequestHeader","_","Object","defineProperty","value","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentionOptions","traceFetch","traceXHR","tracingOrigins","registerRequestInstrumentation","_options","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","some","origin","isMatchingPattern","addInstrumentationHandler","callback"]
}
