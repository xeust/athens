shadow$provide.module$node_modules$$sentry$integrations$dist$offline=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),localForage=require("module$node_modules$localforage$dist$localforage");global=function(){function Offline(options){void 0===options&&(options={});this.name=Offline.id;this.global=utils_1.getGlobalObject();this.maxStoredEvents=
options.maxStoredEvents||30;this.offlineEventStore=localForage.createInstance({name:"sentry/offlineEventStore"})}Offline.prototype.setupOnce=function(addGlobalEventProcessor,getCurrentHub){var _this=this;this.hub=getCurrentHub();"addEventListener"in this.global&&this.global.addEventListener("online",function(){_this._sendEvents().catch(function(){utils_1.logger.warn("could not send cached events")})});addGlobalEventProcessor(function(event){return _this.hub&&_this.hub.getIntegration(Offline)&&"navigator"in
_this.global&&"onLine"in _this.global.navigator&&!_this.global.navigator.onLine?(_this._cacheEvent(event).then(function(_event){return _this._enforceMaxEvents()}).catch(function(_error){utils_1.logger.warn("could not cache event while offline")}),null):event});"navigator"in this.global&&"onLine"in this.global.navigator&&this.global.navigator.onLine&&this._sendEvents().catch(function(){utils_1.logger.warn("could not send cached events")})};Offline.prototype._cacheEvent=function(event){return tslib_1.__awaiter(this,
void 0,void 0,function(){return tslib_1.__generator(this,function(_a){return[2,this.offlineEventStore.setItem(utils_1.uuid4(),event)]})})};Offline.prototype._enforceMaxEvents=function(){return tslib_1.__awaiter(this,void 0,void 0,function(){var events,_this=this;return tslib_1.__generator(this,function(_a){events=[];return[2,this.offlineEventStore.iterate(function(event,cacheKey,_index){events.push({cacheKey,event})}).then(function(){return _this._purgeEvents(events.sort(function(a,b){return(b.event.timestamp||
0)-(a.event.timestamp||0)}).slice(_this.maxStoredEvents<events.length?_this.maxStoredEvents:events.length).map(function(event){return event.cacheKey}))}).catch(function(_error){utils_1.logger.warn("could not enforce max events")})]})})};Offline.prototype._purgeEvent=function(cacheKey){return tslib_1.__awaiter(this,void 0,void 0,function(){return tslib_1.__generator(this,function(_a){return[2,this.offlineEventStore.removeItem(cacheKey)]})})};Offline.prototype._purgeEvents=function(cacheKeys){return tslib_1.__awaiter(this,
void 0,void 0,function(){var _this=this;return tslib_1.__generator(this,function(_a){return[2,Promise.all(cacheKeys.map(function(cacheKey){return _this._purgeEvent(cacheKey)})).then()]})})};Offline.prototype._sendEvents=function(){return tslib_1.__awaiter(this,void 0,void 0,function(){var _this=this;return tslib_1.__generator(this,function(_a){return[2,this.offlineEventStore.iterate(function(event,cacheKey,_index){_this.hub?(_this.hub.captureEvent(event),_this._purgeEvent(cacheKey).catch(function(_error){utils_1.logger.warn("could not purge event from cache")})):
utils_1.logger.warn("no hub found - could not send cached event")})]})})};Offline.id="Offline";return Offline}();exports.Offline=global}
//# sourceMappingURL=module$node_modules$$sentry$integrations$dist$offline.js.map
