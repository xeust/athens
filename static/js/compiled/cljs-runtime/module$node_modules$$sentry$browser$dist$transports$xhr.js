shadow$provide.module$node_modules$$sentry$browser$dist$transports$xhr=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),core_1=require("module$node_modules$$sentry$core$dist$index"),utils_1=require("module$node_modules$$sentry$utils$dist$index");global=function(_super){function XHRTransport(){return null!==_super&&_super.apply(this,arguments)||this}tslib_1.__extends(XHRTransport,_super);XHRTransport.prototype.sendEvent=
function(event){return this._sendRequest(core_1.eventToSentryRequest(event,this._api),event)};XHRTransport.prototype.sendSession=function(session){return this._sendRequest(core_1.sessionToSentryRequest(session,this._api),session)};XHRTransport.prototype._sendRequest=function(sentryRequest,originalPayload){var _this=this;return this._isRateLimited(sentryRequest.type)?Promise.reject({event:originalPayload,type:sentryRequest.type,reason:"Transport locked till "+this._disabledUntil(sentryRequest.type)+
" due to too many requests.",status:429}):this._buffer.add(new utils_1.SyncPromise(function(resolve,reject){var request=new XMLHttpRequest;request.onreadystatechange=function(){if(4===request.readyState){var headers={"x-sentry-rate-limits":request.getResponseHeader("X-Sentry-Rate-Limits"),"retry-after":request.getResponseHeader("Retry-After")};_this._handleResponse({requestType:sentryRequest.type,response:request,headers,resolve,reject})}};request.open("POST",sentryRequest.url);for(var header in _this.options.headers)_this.options.headers.hasOwnProperty(header)&&
request.setRequestHeader(header,_this.options.headers[header]);request.send(sentryRequest.body)}))};return XHRTransport}(require("module$node_modules$$sentry$browser$dist$transports$base").BaseTransport);exports.XHRTransport=global}
//# sourceMappingURL=module$node_modules$$sentry$browser$dist$transports$xhr.js.map
