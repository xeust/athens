{
"version":3,
"file":"module$node_modules$deta$internal$services$base_service.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpH,MAAMC,YAAcH,OAAA,CAAQ,yCAAR,CAApB,CACMI,MAAQJ,OAAA,CAAQ,4CAAR,CAEd,MAAMK,YAAN,CACEC,WAAW,CAACC,IAAD,CAAO,CAChB,IAAA,CAAKC,QAAL,CAAgB,EAAAC,EAAMF,IACtB,OAAMG,MAAQ,IAAIN,KAAJ,CAAUO,KAAV,CAAgB,CAAEC,UAAW,CAAA,CAAb,CAAhB,CACd,KAAA,CAAKC,SAAL,CAAiB,EAAAC,EAAMJ,KAHP,CAMd,UAAS,EAAA,CACX,MAAO,KAAA,CAAKG,SAAL,EADI,CAIT,SAAQ,EAAA,CACV,MAAO,KAAA,CAAKL,QAAL,EADG,CAIR,YAAW,EAAA,CACb,MAAM,CAAEO,SAAF,CAAaC,IAAb,CAAA,CAAsB,IAAtB,CAA2BC,KAA3B,CAAiCC,MACvC,OAAO,WAAWF,IAAX,IAAmBD,SAAnB,EAFM,CAKX,WAAU,EAAA,CACZ,MAAM,CAAEI,UAAF,CAAA;AAAiB,IAAjB,CAAsBF,KAAtB,CAA4BC,MAElC,OAAO,CACL,YAAaC,UADR,CAEL,eAAgB,kBAFX,CAHK,CASRC,aAAO,CAACC,KAAD,CAAQC,OAAR,CAAiBC,MAAA,CAAS,KAA1B,CAAiC,CAC5C,MAAM,CAAE,MAAOC,MAAT,CAAA,CAAoBrB,WAA1B,CAEMiB,QAAU,CACdG,MADc,CAEdE,QAAS,IAATA,CAAcA,OAFA,CAKD,MAAf,GAAIF,MAAJ,GAAsBH,OAAtB,CAA8B,IAA9B,CAAwCM,IAAA,CAAKC,SAAL,CAAeL,OAAf,CAAxC,CACAF,QAAA,CAAQ,KAAR,CAAmB,IAAnB,CAAwBQ,MAElBC,QAAAA,CAAW,MAAML,MAAA,CAAO,GAAG,IAAH,CAAQM,QAAR,GAAmBT,KAAnB,EAAP,CAAmCD,OAAnC,CACjBW,MAAAA,CAASF,OAATE,CAAkBA,MAExB,IAAe,GAAf,GAAIA,KAAJ,CACE,KAAUC,MAAJ,CAAU,cAAV,CAAN,CAGIC,OAAAA,CAAO,MAAMJ,OAAA,CAASK,IAAT,EAEnB,OAAO,CAAEH,OAAAA,KAAF,CAAUF,SAAUI,OAApB,CApBqC,CA7BhD,CAqDAhC,MAAA,CAAOC,OAAP,CAAiBG,WAzDmG;",
"sources":["node_modules/deta/internal/services/base-service.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$deta$internal$services$base_service\"] = function(global,require,module,exports) {\nconst fetchModule = require('../fetch');\nconst https = require('https');\n\nclass BaseService {\n  constructor(deta) {\n    this._getDeta = () => deta;\n    const agent = new https.Agent({ keepAlive: true });\n    this._getAgent = () => agent;\n  }\n\n  get _agent() {\n    return this._getAgent();\n  }\n\n  get _deta() {\n    return this._getDeta();\n  }\n\n  get _baseURL() {\n    const { projectId, host } = this._deta.config;\n    return `https://${host}/${projectId}`;\n  }\n\n  get headers() {\n    const { projectKey } = this._deta.config;\n\n    return {\n      'X-API-Key': projectKey,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  async request(route, payload, method = 'GET') {\n    const { fetch: _fetch } = fetchModule;\n\n    const request = {\n      method,\n      headers: this.headers,\n    };\n\n    if (method !== 'GET') request['body'] = JSON.stringify(payload);\n    request['agent'] = this._agent;\n\n    const response = await _fetch(`${this._baseURL}${route}`, request);\n    const status = response.status;\n\n    if (status === 401){\n      throw new Error(\"Unauthorized\");\n    }\n\n    const data = await response.json();\n    \n    return { status, response: data };\n  }\n}\n\nmodule.exports = BaseService;\n\n};"],
"names":["shadow$provide","global","require","module","exports","fetchModule","https","BaseService","constructor","deta","_getDeta","this._getDeta","agent","Agent","keepAlive","_getAgent","this._getAgent","projectId","host","_deta","config","projectKey","request","route","payload","method","_fetch","headers","JSON","stringify","_agent","response","_baseURL","status","Error","data","json"]
}
