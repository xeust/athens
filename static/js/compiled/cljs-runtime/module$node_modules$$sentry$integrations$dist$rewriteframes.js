shadow$provide.module$node_modules$$sentry$integrations$dist$rewriteframes=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index");global=function(){function RewriteFrames(options){var _this=this;void 0===options&&(options={});this.name=RewriteFrames.id;this._iteratee=function(frame){if(!frame.filename)return frame;var isWindowsFrame=/^[A-Z]:\\/.test(frame.filename),
startsWithSlash=/^\//.test(frame.filename);if(isWindowsFrame||startsWithSlash)isWindowsFrame=isWindowsFrame?frame.filename.replace(/^[A-Z]:/,"").replace(/\\/g,"/"):frame.filename,isWindowsFrame=_this._root?utils_1.relative(_this._root,isWindowsFrame):utils_1.basename(isWindowsFrame),frame.filename="app:///"+isWindowsFrame;return frame};options.root&&(this._root=options.root);options.iteratee&&(this._iteratee=options.iteratee)}RewriteFrames.prototype.setupOnce=function(addGlobalEventProcessor,getCurrentHub){addGlobalEventProcessor(function(event){var self=
getCurrentHub().getIntegration(RewriteFrames);return self?self.process(event):event})};RewriteFrames.prototype.process=function(event){return event.exception&&Array.isArray(event.exception.values)?this._processExceptionsEvent(event):event.stacktrace?this._processStacktraceEvent(event):event};RewriteFrames.prototype._processExceptionsEvent=function(event){var _this=this;try{return tslib_1.__assign(tslib_1.__assign({},event),{exception:tslib_1.__assign(tslib_1.__assign({},event.exception),{values:event.exception.values.map(function(value){return tslib_1.__assign(tslib_1.__assign({},
value),{stacktrace:_this._processStacktrace(value.stacktrace)})})})})}catch(_oO){return event}};RewriteFrames.prototype._processStacktraceEvent=function(event){try{return tslib_1.__assign(tslib_1.__assign({},event),{stacktrace:this._processStacktrace(event.stacktrace)})}catch(_oO){return event}};RewriteFrames.prototype._processStacktrace=function(stacktrace){var _this=this;return tslib_1.__assign(tslib_1.__assign({},stacktrace),{frames:stacktrace&&stacktrace.frames&&stacktrace.frames.map(function(f){return _this._iteratee(f)})})};
RewriteFrames.id="RewriteFrames";return RewriteFrames}();exports.RewriteFrames=global}
//# sourceMappingURL=module$node_modules$$sentry$integrations$dist$rewriteframes.js.map
