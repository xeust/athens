{
"version":3,
"file":"module$node_modules$$sentry$react$dist$profiler.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@sentry/react/dist/profiler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$react$dist$profiler\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar browser_1 = require(\"@sentry/browser\");\nvar utils_1 = require(\"@sentry/utils\");\nvar hoist_non_react_statics_1 = tslib_1.__importDefault(require(\"hoist-non-react-statics\"));\nvar React = tslib_1.__importStar(require(\"react\"));\nexports.UNKNOWN_COMPONENT = 'unknown';\nvar TRACING_GETTER = {\n    id: 'Tracing',\n};\nvar globalTracingIntegration = null;\n/** @deprecated remove when @sentry/apm no longer used */\nvar getTracingIntegration = function () {\n    if (globalTracingIntegration) {\n        return globalTracingIntegration;\n    }\n    globalTracingIntegration = browser_1.getCurrentHub().getIntegration(TRACING_GETTER);\n    return globalTracingIntegration;\n};\n/**\n * pushActivity creates an new react activity.\n * Is a no-op if Tracing integration is not valid\n * @param name displayName of component that started activity\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction pushActivity(name, op) {\n    if (globalTracingIntegration === null) {\n        return null;\n    }\n    return globalTracingIntegration.constructor.pushActivity(name, {\n        description: \"<\" + name + \">\",\n        op: \"react.\" + op,\n    });\n}\n/**\n * popActivity removes a React activity.\n * Is a no-op if Tracing integration is not valid.\n * @param activity id of activity that is being popped\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction popActivity(activity) {\n    if (activity === null || globalTracingIntegration === null) {\n        return;\n    }\n    globalTracingIntegration.constructor.popActivity(activity);\n}\n/**\n * Obtain a span given an activity id.\n * Is a no-op if Tracing integration is not valid.\n * @param activity activity id associated with obtained span\n * @deprecated remove when @sentry/apm no longer used\n */\nfunction getActivitySpan(activity) {\n    if (activity === null || globalTracingIntegration === null) {\n        return undefined;\n    }\n    return globalTracingIntegration.constructor.getActivitySpan(activity);\n}\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nvar Profiler = /** @class */ (function (_super) {\n    tslib_1.__extends(Profiler, _super);\n    function Profiler(props) {\n        var _this = _super.call(this, props) || this;\n        // The activity representing how long it takes to mount a component.\n        _this._mountActivity = null;\n        // The span of the mount activity\n        _this._mountSpan = undefined;\n        var _a = _this.props, name = _a.name, _b = _a.disabled, disabled = _b === void 0 ? false : _b;\n        if (disabled) {\n            return _this;\n        }\n        // If they are using @sentry/apm, we need to push/pop activities\n        // eslint-disable-next-line deprecation/deprecation\n        if (getTracingIntegration()) {\n            // eslint-disable-next-line deprecation/deprecation\n            _this._mountActivity = pushActivity(name, 'mount');\n        }\n        else {\n            var activeTransaction = getActiveTransaction();\n            if (activeTransaction) {\n                _this._mountSpan = activeTransaction.startChild({\n                    description: \"<\" + name + \">\",\n                    op: 'react.mount',\n                });\n            }\n        }\n        return _this;\n    }\n    // If a component mounted, we can finish the mount activity.\n    Profiler.prototype.componentDidMount = function () {\n        if (this._mountSpan) {\n            this._mountSpan.finish();\n        }\n        else {\n            // eslint-disable-next-line deprecation/deprecation\n            this._mountSpan = getActivitySpan(this._mountActivity);\n            // eslint-disable-next-line deprecation/deprecation\n            popActivity(this._mountActivity);\n            this._mountActivity = null;\n        }\n    };\n    Profiler.prototype.componentDidUpdate = function (_a) {\n        var _this = this;\n        var updateProps = _a.updateProps, _b = _a.includeUpdates, includeUpdates = _b === void 0 ? true : _b;\n        // Only generate an update span if hasUpdateSpan is true, if there is a valid mountSpan,\n        // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n        // We are just trying to give baseline clues for further investigation.\n        if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n            // See what props haved changed between the previous props, and the current props. This is\n            // set as data on the span. We just store the prop keys as the values could be potenially very large.\n            var changedProps = Object.keys(updateProps).filter(function (k) { return updateProps[k] !== _this.props.updateProps[k]; });\n            if (changedProps.length > 0) {\n                // The update span is a point in time span with 0 duration, just signifying that the component\n                // has been updated.\n                var now = utils_1.timestampWithMs();\n                this._mountSpan.startChild({\n                    data: {\n                        changedProps: changedProps,\n                    },\n                    description: \"<\" + this.props.name + \">\",\n                    endTimestamp: now,\n                    op: \"react.update\",\n                    startTimestamp: now,\n                });\n            }\n        }\n    };\n    // If a component is unmounted, we can say it is no longer on the screen.\n    // This means we can finish the span representing the component render.\n    Profiler.prototype.componentWillUnmount = function () {\n        var _a = this.props, name = _a.name, _b = _a.includeRender, includeRender = _b === void 0 ? true : _b;\n        if (this._mountSpan && includeRender) {\n            // If we were able to obtain the spanId of the mount activity, we should set the\n            // next activity as a child to the component mount activity.\n            this._mountSpan.startChild({\n                description: \"<\" + name + \">\",\n                endTimestamp: utils_1.timestampWithMs(),\n                op: \"react.render\",\n                startTimestamp: this._mountSpan.endTimestamp,\n            });\n        }\n    };\n    Profiler.prototype.render = function () {\n        return this.props.children;\n    };\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    Profiler.defaultProps = {\n        disabled: false,\n        includeRender: true,\n        includeUpdates: true,\n    };\n    return Profiler;\n}(React.Component));\nexports.Profiler = Profiler;\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\nfunction withProfiler(WrappedComponent, \n// We do not want to have `updateProps` given in options, it is instead filled through the HOC.\noptions) {\n    var componentDisplayName = (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || exports.UNKNOWN_COMPONENT;\n    var Wrapped = function (props) { return (React.createElement(Profiler, tslib_1.__assign({}, options, { name: componentDisplayName, updateProps: props }),\n        React.createElement(WrappedComponent, tslib_1.__assign({}, props)))); };\n    Wrapped.displayName = \"profiler(\" + componentDisplayName + \")\";\n    // Copy over static methods from Wrapped component to Profiler HOC\n    // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n    hoist_non_react_statics_1.default(Wrapped, WrappedComponent);\n    return Wrapped;\n}\nexports.withProfiler = withProfiler;\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(name, options) {\n    if (options === void 0) { options = {\n        disabled: false,\n        hasRenderSpan: true,\n    }; }\n    var _a = tslib_1.__read(React.useState(function () {\n        if (options && options.disabled) {\n            return undefined;\n        }\n        var activeTransaction = getActiveTransaction();\n        if (activeTransaction) {\n            return activeTransaction.startChild({\n                description: \"<\" + name + \">\",\n                op: 'react.mount',\n            });\n        }\n        return undefined;\n    }), 1), mountSpan = _a[0];\n    React.useEffect(function () {\n        if (mountSpan) {\n            mountSpan.finish();\n        }\n        return function () {\n            if (mountSpan && options.hasRenderSpan) {\n                mountSpan.startChild({\n                    description: \"<\" + name + \">\",\n                    endTimestamp: utils_1.timestampWithMs(),\n                    op: \"react.render\",\n                    startTimestamp: mountSpan.endTimestamp,\n                });\n            }\n        };\n        // We only want this to run once.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n}\nexports.useProfiler = useProfiler;\n/** Grabs active transaction off scope */\nfunction getActiveTransaction(hub) {\n    if (hub === void 0) { hub = browser_1.getCurrentHub(); }\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            return scope.getTransaction();\n        }\n    }\n    return undefined;\n}\nexports.getActiveTransaction = getActiveTransaction;\n//# sourceMappingURL=profiler.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getActiveTransaction","hub","browser_1","getCurrentHub","scope","getScope","getTransaction","Object","defineProperty","value","tslib_1","utils_1","hoist_non_react_statics_1","__importDefault","React","__importStar","UNKNOWN_COMPONENT","TRACING_GETTER","id","globalTracingIntegration","Profiler","_super","props","_this","call","_mountActivity","_mountSpan","undefined","_a","name","_b","disabled","getIntegration","constructor","pushActivity","description","op","activeTransaction","startChild","__extends","prototype","componentDidMount","Profiler.prototype.componentDidMount","finish","activity","getActivitySpan","popActivity","componentDidUpdate","Profiler.prototype.componentDidUpdate","updateProps","includeUpdates","changedProps","keys","filter","k","length","now","timestampWithMs","data","endTimestamp","startTimestamp","componentWillUnmount","Profiler.prototype.componentWillUnmount","includeRender","render","Profiler.prototype.render","children","defaultProps","Component","withProfiler","WrappedComponent","options","componentDisplayName","displayName","Wrapped","createElement","__assign","default","useProfiler","hasRenderSpan","mountSpan","__read","useState","useEffect"]
}
