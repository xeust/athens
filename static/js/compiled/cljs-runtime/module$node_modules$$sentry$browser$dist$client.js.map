{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$client.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/client.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$client\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar utils_1 = require(\"@sentry/utils\");\nvar backend_1 = require(\"./backend\");\nvar helpers_1 = require(\"./helpers\");\nvar integrations_1 = require(\"./integrations\");\nvar version_1 = require(\"./version\");\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, backend_1.BrowserBackend, options) || this;\n    }\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = utils_1.getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            utils_1.logger.error('Trying to call showReportDialog with Sentry Client disabled');\n            return;\n        }\n        helpers_1.injectReportDialog(tslib_1.__assign(tslib_1.__assign({}, options), { dsn: options.dsn || this.getDsn() }));\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign(tslib_1.__assign({}, event.sdk), { name: version_1.SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: version_1.SDK_VERSION,\n                },\n            ]), version: version_1.SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._sendEvent = function (event) {\n        var integration = this.getIntegration(integrations_1.Breadcrumbs);\n        if (integration) {\n            integration.addSentryBreadcrumb(event);\n        }\n        _super.prototype._sendEvent.call(this, event);\n    };\n    return BrowserClient;\n}(core_1.BaseClient));\nexports.BrowserClient = BrowserClient;\n//# sourceMappingURL=client.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","utils_1","backend_1","helpers_1","integrations_1","version_1","BrowserClient","_super","options","call","BrowserBackend","__extends","prototype","showReportDialog","BrowserClient.prototype.showReportDialog","getGlobalObject","document","_isEnabled","injectReportDialog","__assign","dsn","getDsn","logger","error","_prepareEvent","BrowserClient.prototype._prepareEvent","event","scope","hint","platform","sdk","name","SDK_NAME","packages","__spread","version","SDK_VERSION","_sendEvent","BrowserClient.prototype._sendEvent","integration","getIntegration","Breadcrumbs","addSentryBreadcrumb","BaseClient"]
}
