{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB/HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,eAAiBN,OAAA,CAAQ,8EAAR,CAArB,CACIO,iBAAmBP,OAAA,CAAQ,gFAAR,CADvB,CAEIQ,aAAeR,OAAA,CAAQ,4EAAR,CAFnB,CAGIS,UAAYT,OAAA,CAAQ,yEAAR,CAHhB;AAIIU,WAAaV,OAAA,CAAQ,0EAAR,CACjBE,QAAA,CAAQS,MAAR,CAAiBC,QAAS,CAACC,QAAD,CAAW,CACjC,IAAIC,OAASN,YAAA,CAAaO,UAAb,CAAwB,KAAxB,CAAb,CACIC,YAAcT,gBAAA,CAAiBU,cAAjB,EADlB,CAEIC,aAAeA,QAAS,CAACC,KAAD,CAAQ,CAE5BA,KAAJ,CAAUC,SAAV,CAAsBJ,WAAtB,CAAkCK,SAAlC,GACIP,MAGA,CAHOT,KAGP,CAHec,KAGf,CAHqBG,eAGrB,CAHuCH,KAGvC,CAH6CC,SAG7C,CAFAN,MAAA,CAAOS,OAAP,CAAeC,IAAf,CAAoBL,KAApB,CAEA,CADAL,MACA,CADOW,OACP,CADiB,CAAA,CACjB,CAAAC,MAAA,EAJJ,CAFgC,CAFpC,CAWIC,GAAKlB,SAAA,CAAUmB,OAAV,CAAkB,aAAlB,CAAiCV,YAAjC,CAXT,CAYIQ,OAASpB,cAAA,CAAeuB,YAAf,CAA4BhB,QAA5B,CAAsCC,MAAtC,CAA8Ca,EAA9C,CACb,IAAIA,EAAJ,CACIjB,UAAA,CAAWoB,QAAX,CAAoB,QAAS,EAAG,CAC5BH,EAAA,CAAGI,WAAH,EAAA,CAAiBC,GAAjB,CAAqBd,YAArB,CACAS;EAAA,CAAGM,UAAH,EAF4B,CAAhC,CAGG,CAAA,CAHH,CADJ,KAOI,IAAIC,MAAJ,CAAWC,WAAX,EAA0BD,MAA1B,CAAiCC,WAAjC,CAA6CC,iBAA7C,CACIF,MAAA,CAAOC,WAAP,CAAmBC,iBAAnB,CAAqC,QAAS,CAAC/B,KAAD,CAAQgC,KAAR,CAAe,CAErDA,KAAJ,CAAUhB,SAAV,CAAsBL,WAAtB,CAAkCK,SAAlC,GACIP,MAYA,CAZOT,KAYP,CAZeA,KAYf,CAXAS,MAWA,CAXOW,OAWP,CAXiB,CAAA,CAWjB,CAVAX,MAUA,CAVOS,OAUP,CAViB,CACb,CACIe,UAAW,aADf,CAEIC,KAAMF,KAANE,CAAYC,IAFhB,CAGIC,OAAQJ,KAARI,CAAcA,MAHlB,CAIIC,WAAYL,KAAZK,CAAkBA,UAJtB,CAKItB,UAAWiB,KAAXjB,CAAiBC,SALrB,CAMIC,gBAAiBe,KAAjBf,CAAuBD,SAAvBC,CAAmCjB,KANvC,CADa,CAUjB,CAAAqB,MAAA,EAbJ,CAFyD,CAA7D,CAtByB,CAtB0F;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/getFID.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bindReporter_1 = require(\"./lib/bindReporter\");\nvar getFirstHidden_1 = require(\"./lib/getFirstHidden\");\nvar initMetric_1 = require(\"./lib/initMetric\");\nvar observe_1 = require(\"./lib/observe\");\nvar onHidden_1 = require(\"./lib/onHidden\");\nexports.getFID = function (onReport) {\n    var metric = initMetric_1.initMetric('FID');\n    var firstHidden = getFirstHidden_1.getFirstHidden();\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (entry.startTime < firstHidden.timeStamp) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            metric.isFinal = true;\n            report();\n        }\n    };\n    var po = observe_1.observe('first-input', entryHandler);\n    var report = bindReporter_1.bindReporter(onReport, metric, po);\n    if (po) {\n        onHidden_1.onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n    else {\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n            window.perfMetrics.onFirstInputDelay(function (value, event) {\n                // Only report if the page wasn't hidden prior to the first input.\n                if (event.timeStamp < firstHidden.timeStamp) {\n                    metric.value = value;\n                    metric.isFinal = true;\n                    metric.entries = [\n                        {\n                            entryType: 'first-input',\n                            name: event.type,\n                            target: event.target,\n                            cancelable: event.cancelable,\n                            startTime: event.timeStamp,\n                            processingStart: event.timeStamp + value,\n                        },\n                    ];\n                    report();\n                }\n            });\n        }\n    }\n};\n//# sourceMappingURL=getFID.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter_1","getFirstHidden_1","initMetric_1","observe_1","onHidden_1","getFID","exports.getFID","onReport","metric","initMetric","firstHidden","getFirstHidden","entryHandler","entry","startTime","timeStamp","processingStart","entries","push","isFinal","report","po","observe","bindReporter","onHidden","takeRecords","map","disconnect","window","perfMetrics","onFirstInputDelay","event","entryType","name","type","target","cancelable"]
}
