shadow$provide.module$node_modules$$sentry$integrations$dist$reportingobserver=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),ReportTypes;(function(ReportTypes){ReportTypes.Crash="crash";ReportTypes.Deprecation="deprecation";ReportTypes.Intervention="intervention"})(ReportTypes||(ReportTypes={}));global=function(){function ReportingObserver(_options){void 0===
_options&&(_options={types:[ReportTypes.Crash,ReportTypes.Deprecation,ReportTypes.Intervention]});this._options=_options;this.name=ReportingObserver.id}ReportingObserver.prototype.setupOnce=function(_,getCurrentHub){utils_1.supportsReportingObserver()&&(this._getCurrentHub=getCurrentHub,(new (utils_1.getGlobalObject().ReportingObserver)(this.handler.bind(this),{buffered:!0,types:this._options.types})).observe())};ReportingObserver.prototype.handler=function(reports){var _a,hub=this._getCurrentHub&&
this._getCurrentHub();if(hub&&hub.getIntegration(ReportingObserver)){var _loop_1=function(report){hub.withScope(function(scope){scope.setExtra("url",report.url);var label="ReportingObserver ["+report.type+"]",details="No details available";if(report.body){var plainBody={},prop;for(prop in report.body)plainBody[prop]=report.body[prop];scope.setExtra("body",plainBody);report.type===ReportTypes.Crash?(scope=report.body,details=[scope.crashId||"",scope.reason||""].join(" ").trim()||details):(scope=report.body,
details=scope.message||details)}hub.captureMessage(label+": "+details)})};try{for(var reports_1=tslib_1.__values(reports),reports_1_1=reports_1.next();!reports_1_1.done;reports_1_1=reports_1.next())_loop_1(reports_1_1.value)}catch(e_1_1){var e_1={error:e_1_1}}finally{try{reports_1_1&&!reports_1_1.done&&(_a=reports_1.return)&&_a.call(reports_1)}finally{if(e_1)throw e_1.error;}}}};ReportingObserver.id="ReportingObserver";return ReportingObserver}();exports.ReportingObserver=global}
//# sourceMappingURL=module$node_modules$$sentry$integrations$dist$reportingobserver.js.map
