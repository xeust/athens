{"version":3,"sources":["komponentit/modal.cljs"],"mappings":";AAMA;;;;;;;AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAMWM;AANX,AAAAF,AAAAJ,AAAA,AAMiBO;AANjB,AAAAH,AAAAJ,AAAA,AAMyBQ;AANzB,AAAAJ,AAAAJ,AAAA,AAMgCS;AANhC,AAAAL,AAAAJ,AAAA,AAMyCU;AANzC,AAAA,AAAA,AAAA,AAOGC,AACc,AAAKC;AAAL,AACE,AAAAC,AAAM,AAAWD;AAAjB,AAAA,AAAAC;AAAA;AACK,AAACJ,AAAAA,AAAAA;;;;AADN;;;AATnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAgBK,AAAA,AAAA,AAAIA,AAAoB,AAAKK;AAAL,AAAQ,AAACL,AAAAA,AAAAA;;AAAT;AAhB7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAgBK,AAEQC,AAEP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAID,AAIU,AAAKK;AAAL,AAAQ,AAACL,AAAAA,AAAAA;;AAAT;AAxBpB,AAAA,AAoBM,AAAA,AAMAH,AACoBC,AACrB,AAAA,AAAA,AAACQ,AAA0BP;;AAEhC;;;;;;;;;AAAA,AAAAQ,AAAME;AAAN,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhB,AAAA,AAAAgB,AAAA,AAAA,AAAA,AAAA,AAAAf,AAAAC,AAAAc,AAAAA;AAAA,AAAAb,AAAAa,AAAA,AAAA,AAQWX;AARX,AAAAF,AAAAa,AAAA,AAAA,AAQiBV;AARjB,AAAAH,AAAAa,AAAA,AAQyBP;AARzB,AAAAN,AAAAa,AAAA,AASWE;AATX,AAAAf,AAAAa,AAAA,AASmBG;AATnB,AAAAhB,AAAAa,AAAA,AAAA,AAUWI;AAVX,AAAAjB,AAAAa,AAAA,AAAA,AAUwBK;AAVxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAeGjB,AACQK,AACAJ,AACEC,AAIa,AAAKO;AAAL,AACE,AAAMM;AAAN,AAAc,AAACA,AAAAA,AAAAA;;AAAf;;AADF;AAtB1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBeC,AAIW,AAAKP;AAAL,AACE,AAAMK;AAAN,AAAc,AAACA,AAAAA,AAAAA;;AAAf;;AADF;AA7B1B,AAgCeG,AACD;AAAA,AACE,AAAMF;AAAN,AAAc,AAACA,AAAAA,AAAAA;;AAAf","names":["p__97880","map__97881","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","komponentit.modal/modal","title","content","footer","on-close","class","komponentit.mixins/window-event-listener","e","G__97898","_","cljs.core.into","p__97909","map__97915","komponentit.modal/confirm-modal","success","failure","cancel-label","ok-label"],"sourcesContent":["(ns komponentit.modal\n  (:require [reagent.core :as r]\n            [komponentit.mixins :as mixins]))\n\n;; TODO: Trap focus within modal\n\n(defn modal\n\"- :title      The el for modal header\n- :content    The el for modal body\n- :footer     The elements for modal footer\n- :on-close   (Optional) callback to be called when modal is closed by clicking outside of the modal\n- :class      (Optional) additional classes for .modal-dialog; Examples: modal-sm, modal-lg\"\n  [{:keys [title content footer on-close class]}]\n  [mixins/window-event-listener\n   {:on-key-down (fn [e]\n                   (case (.-keyCode e)\n                     27 (on-close)\n                     nil))}\n   [:div.modal__container\n    {:style {:display \"block\"}}\n    [:div.modal__backdrop\n     ;; could be replaced with window click handler\n     (if on-close {:on-click (fn [_] (on-close) nil)})]\n    [:div.modal\n     {:class class}\n     [:div.modal__header\n      (if on-close\n        [:button.modal__close\n         {:aria-label \"Close\"\n          :type \"button\"\n          :on-click (fn [_] (on-close) nil)}\n         \"\u00d7\"])\n      title]\n     [:div.modal__content content]\n     (into [:div.modal__footer] footer)]]])\n\n(defn confirm-modal\n\"- :title        The el for modal header\n- :content      The el for modal content\n- :success      Function to call if confirmed\n- :failure      Function to call if cancelled\n- :ok-label     Label for OK button\n- :cancel-label Label for Cancel button\n- :class        (Optional) additional classes for .modal-dialog\"\n  [{:keys [title content class\n           success failure\n           cancel-label ok-label]\n    :or {title \"Yes or no?\"\n         content \"Are you sure?\"\n         cancel-label \"Cancel\"\n         ok-label \"OK\"}}]\n  [modal\n   {:class class\n    :title title\n    :content content\n    :footer [[:div.modal__buttons\n              [:button.modal__cancel\n               {:type \"button\"\n                :on-click (fn [_]\n                            (when failure (failure))\n                            nil)}\n               cancel-label]\n              [:button.modal__ok\n               {:type \"button\"\n                :autoFocus true\n                :on-click (fn [_]\n                            (when success (success))\n                            nil)}\n               ok-label]]]\n    :on-close (fn []\n                (when failure (failure)))}])\n"]}