{
"version":3,
"file":"module$node_modules$$sentry$core$dist$integration.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/core/dist/integration.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$core$dist$integration\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar utils_1 = require(\"@sentry/utils\");\nexports.installedIntegrations = [];\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = tslib_1.__spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\nexports.getIntegrationsToSetup = getIntegrationsToSetup;\n/** Setup given integration */\nfunction setupIntegration(integration) {\n    if (exports.installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(hub_1.addGlobalEventProcessor, hub_1.getCurrentHub);\n    exports.installedIntegrations.push(integration.name);\n    utils_1.logger.log(\"Integration installed: \" + integration.name);\n}\nexports.setupIntegration = setupIntegration;\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\nexports.setupIntegrations = setupIntegrations;\n//# sourceMappingURL=integration.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getIntegrationsToSetup","options","defaultIntegrations","tslib_1","__spread","userIntegrations","integrations","Array","isArray","userIntegrationsNames_1","map","i","name","pickedIntegrationsNames_1","forEach","defaultIntegration","indexOf","push","userIntegration","integrationsNames","alwaysLastToRun","apply","splice","setupIntegration","integration","installedIntegrations","setupOnce","hub_1","addGlobalEventProcessor","getCurrentHub","utils_1","logger","log","Object","defineProperty","value","setupIntegrations"]
}
