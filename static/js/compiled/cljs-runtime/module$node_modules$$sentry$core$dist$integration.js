shadow$provide.module$node_modules$$sentry$core$dist$integration=function(global,require,module,exports){function getIntegrationsToSetup(options){var defaultIntegrations=options.defaultIntegrations&&tslib_1.__spread(options.defaultIntegrations)||[];options=options.integrations;var integrations=[];if(Array.isArray(options)){var userIntegrationsNames_1=options.map(function(i){return i.name}),pickedIntegrationsNames_1=[];defaultIntegrations.forEach(function(defaultIntegration){-1===userIntegrationsNames_1.indexOf(defaultIntegration.name)&&
-1===pickedIntegrationsNames_1.indexOf(defaultIntegration.name)&&(integrations.push(defaultIntegration),pickedIntegrationsNames_1.push(defaultIntegration.name))});options.forEach(function(userIntegration){-1===pickedIntegrationsNames_1.indexOf(userIntegration.name)&&(integrations.push(userIntegration),pickedIntegrationsNames_1.push(userIntegration.name))})}else"function"===typeof options?(integrations=options(defaultIntegrations),integrations=Array.isArray(integrations)?integrations:[integrations]):
integrations=tslib_1.__spread(defaultIntegrations);defaultIntegrations=integrations.map(function(i){return i.name});-1!==defaultIntegrations.indexOf("Debug")&&integrations.push.apply(integrations,tslib_1.__spread(integrations.splice(defaultIntegrations.indexOf("Debug"),1)));return integrations}function setupIntegration(integration){-1===exports.installedIntegrations.indexOf(integration.name)&&(integration.setupOnce(hub_1.addGlobalEventProcessor,hub_1.getCurrentHub),exports.installedIntegrations.push(integration.name),
utils_1.logger.log("Integration installed: "+integration.name))}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),hub_1=require("module$node_modules$$sentry$hub$dist$index"),utils_1=require("module$node_modules$$sentry$utils$dist$index");exports.installedIntegrations=[];exports.getIntegrationsToSetup=getIntegrationsToSetup;exports.setupIntegration=setupIntegration;exports.setupIntegrations=function(options){var integrations={};getIntegrationsToSetup(options).forEach(function(integration){integrations[integration.name]=
integration;setupIntegration(integration)});return integrations}}
//# sourceMappingURL=module$node_modules$$sentry$core$dist$integration.js.map
