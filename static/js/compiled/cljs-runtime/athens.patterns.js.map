{"version":3,"sources":["athens/patterns.cljc"],"mappings":";AAKA,AAAA,AAAMA,AACHC;AADH,AAEE,AAACC,AAAW,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBD,AACDA,AACMA;;AAGnC;;;;;AAAA,AAAME,AAIHF;AAJH,AAKE,AAACC,AAAW,AAAA,AAAA,AAA6BD;;AAG3C,AAAA,AAAMG,AACHC,AAAEC,AAAUC;AADf,AAEE,AAACC,AAAuBH,AACA,AAACL,AAAOM,AACR,AAAA,AAAA,AAAcC","names":["athens.patterns/linked","string","cljs.core/re-pattern","athens.patterns/unlinked","athens.patterns/update-links-in-block","s","old-title","new-title","clojure.string/replace"],"sourcesContent":["(ns athens.patterns)\n\n; match [[title]] or #title or #[[title]]\n; provides groups useful for replacing\n; e.g.: $1$3$4new-string$2$5\n(defn linked\n  [string]\n  (re-pattern (str \"(\\\\[{2})\" string \"(\\\\]{2})\"\n                   \"|\" \"(#)\" string\n                   \"|\" \"(#\\\\[{2})\" string \"(\\\\]{2})\")))\n\n\n(defn unlinked\n  \"Exclude #title or [[title]].\n   JavaScript negative lookarounds https://javascript.info/regexp-lookahead-lookbehind\n   Lookarounds don't consume characters https://stackoverflow.com/questions/27179991/regex-matching-multiple-negative-lookahead \"\n  [string]\n  (re-pattern (str \"(?i)(?<!#)(?<!\\\\[\\\\[)\" string \"(?!\\\\]\\\\])\")))\n\n\n(defn update-links-in-block\n  [s old-title new-title]\n  (clojure.string/replace s\n                          (linked old-title)\n                          (str \"$1$3$4\" new-title \"$2$5\")))\n\n"]}