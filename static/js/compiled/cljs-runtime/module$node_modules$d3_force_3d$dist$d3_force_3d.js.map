{
"version":3,
"file":"module$node_modules$d3_force_3d$dist$d3_force_3d.js",
"lineCount":33,
"mappings":"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",
"sources":["node_modules/d3-force-3d/dist/d3-force-3d.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_force_3d$dist$d3_force_3d\"] = function(global,require,module,exports) {\n// https://github.com/vasturiano/d3-force-3d v2.2.0 Copyright 2020 Vasco Asturiano\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-binarytree'), require('d3-quadtree'), require('d3-octree'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-binarytree', 'd3-quadtree', 'd3-octree', 'd3-dispatch', 'd3-timer'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, (function (exports, d3Binarytree, d3Quadtree, d3Octree, d3Dispatch, d3Timer) { 'use strict';\n\nfunction center(x, y, z) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  if (z == null) z = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0,\n        sz = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x || 0, sy += node.y || 0, sz += node.z || 0;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, sz = (sz / n - z) * strength, i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (sx) { node.x -= sx; }\n      if (sy) { node.y -= sy; }\n      if (sz) { node.z -= sz; }\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = +_, force) : z;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle(random) {\n  return (random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction z(d) {\n  return d.z + d.vz;\n}\n\nfunction collide(radius) {\n  var nodes,\n      nDim,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        zi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree =\n          (nDim === 1 ? d3Binarytree.binarytree(nodes, x)\n          :(nDim === 2 ? d3Quadtree.quadtree(nodes, x, y)\n          :(nDim === 3 ? d3Octree.octree(nodes, x, y, z)\n          :null\n      ))).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        if (nDim > 1) { yi = node.y + node.vy; }\n        if (nDim > 2) { zi = node.z + node.vz; }\n        tree.visit(apply);\n      }\n    }\n\n    function apply(treeNode, arg1, arg2, arg3, arg4, arg5, arg6) {\n      var args = [arg1, arg2, arg3, arg4, arg5, arg6];\n      var x0 = args[0],\n          y0 = args[1],\n          z0 = args[2],\n          x1 = args[nDim],\n          y1 = args[nDim+1],\n          z1 = args[nDim+2];\n\n      var data = treeNode.data, rj = treeNode.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = (nDim > 1 ? yi - data.y - data.vy : 0),\n              z = (nDim > 2 ? zi - data.z - data.vz : 0),\n              l = x * x + y * y + z * z;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n            if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            if (nDim > 1) { node.vy += (y *= l) * r; }\n            if (nDim > 2) { node.vz += (z *= l) * r; }\n\n            data.vx -= x * (r = 1 - r);\n            if (nDim > 1) { data.vy -= y * r; }\n            if (nDim > 2) { data.vz -= z * r; }\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r\n          || (nDim > 1 && (y0 > yi + r || y1 < yi - r))\n          || (nDim > 2 && (z0 > zi + r || z1 < zi - r));\n    }\n  }\n\n  function prepare(treeNode) {\n    if (treeNode.data) return treeNode.r = radii[treeNode.data.index];\n    for (var i = treeNode.r = 0; i < Math.pow(2, nDim); ++i) {\n      if (treeNode[i] && treeNode[i].r > treeNode.r) {\n        treeNode.r = treeNode[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _numDimensions, _random) {\n    nodes = _nodes;\n    nDim = _numDimensions;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      nDim,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x = 0, y = 0, z = 0, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        if (nDim > 1) { y = target.y + target.vy - source.y - source.vy || jiggle(random); }\n        if (nDim > 2) { z = target.z + target.vz - source.z - source.vz || jiggle(random); }\n        l = Math.sqrt(x * x + y * y + z * z);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l, z *= l;\n\n        target.vx -= x * (b = bias[i]);\n        if (nDim > 1) { target.vy -= y * b; }\n        if (nDim > 2) { target.vz -= z * b; }\n\n        source.vx += x * (b = 1 - b);\n        if (nDim > 1) { source.vy += y * b; }\n        if (nDim > 2) { source.vz += z * b; }\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _numDimensions, _random) {\n    nodes = _nodes;\n    nDim = _numDimensions;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nfunction lcg() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n\nvar MAX_DIMENSIONS = 3;\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nfunction z$1(d) {\n  return d.z;\n}\n\nvar initialRadius = 10,\n    initialAngleRoll = Math.PI * (3 - Math.sqrt(5)), // Golden ratio angle\n    initialAngleYaw = Math.PI * 20 / (9 + Math.sqrt(221)); // Markov irrational number\n\nfunction simulation(nodes, numDimensions) {\n  numDimensions = numDimensions || 2;\n\n  var nDim = Math.min(MAX_DIMENSIONS, Math.max(1, Math.round(numDimensions))),\n      simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (nDim > 1) {\n          if (node.fy == null) node.y += node.vy *= velocityDecay;\n          else node.y = node.fy, node.vy = 0;\n        }\n        if (nDim > 2) {\n          if (node.fz == null) node.z += node.vz *= velocityDecay;\n          else node.z = node.fz, node.vz = 0;\n        }\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (node.fz != null) node.z = node.fz;\n      if (isNaN(node.x) || (nDim > 1 && isNaN(node.y)) || (nDim > 2 && isNaN(node.z))) {\n        var radius = initialRadius * (nDim > 2 ? Math.cbrt(0.5 + i) : (nDim > 1 ? Math.sqrt(0.5 + i) : i)),\n          rollAngle = i * initialAngleRoll,\n          yawAngle = i * initialAngleYaw;\n\n        if (nDim === 1) {\n          node.x = radius;\n        } else if (nDim === 2) {\n          node.x = radius * Math.cos(rollAngle);\n          node.y = radius * Math.sin(rollAngle);\n        } else { // 3 dimensions: use spherical distribution along 2 irrational number angles\n          node.x = radius * Math.sin(rollAngle) * Math.cos(yawAngle);\n          node.y = radius * Math.cos(rollAngle);\n          node.z = radius * Math.sin(rollAngle) * Math.sin(yawAngle);\n        }\n      }\n      if (isNaN(node.vx) || (nDim > 1 && isNaN(node.vy)) || (nDim > 2 && isNaN(node.vz))) {\n        node.vx = 0;\n        if (nDim > 1) { node.vy = 0; }\n        if (nDim > 2) { node.vz = 0; }\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, nDim, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    numDimensions: function(_) {\n      return arguments.length\n          ? (nDim = Math.min(MAX_DIMENSIONS, Math.max(1, Math.round(_))), forces.forEach(initializeForce), simulation)\n          : nDim;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function() {\n      var args = Array.prototype.slice.call(arguments);\n      var x = args.shift() || 0,\n          y = (nDim > 1 ? args.shift() : null) || 0,\n          z = (nDim > 2 ? args.shift() : null) || 0,\n          radius = args.shift() || Infinity;\n\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          dz,\n          d2,\n          node,\n          closest;\n\n      radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - (node.y || 0);\n        dz = z - (node.z ||0);\n        d2 = dx * dx + dy * dy + dz * dz;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      nDim,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree =\n            (nDim === 1 ? d3Binarytree.binarytree(nodes, x$1)\n            :(nDim === 2 ? d3Quadtree.quadtree(nodes, x$1, y$1)\n            :(nDim === 3 ? d3Octree.octree(nodes, x$1, y$1, z$1)\n            :null\n        ))).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(treeNode) {\n    var strength = 0, q, c, weight = 0, x, y, z, i;\n    var numChildren = treeNode.length;\n\n    // For internal nodes, accumulate forces from children.\n    if (numChildren) {\n      for (x = y = z = i = 0; i < numChildren; ++i) {\n        if ((q = treeNode[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * (q.x || 0), y += c * (q.y || 0), z += c * (q.z || 0);\n        }\n      }\n      strength *= Math.sqrt(4 / numChildren); // scale accumulated strength according to number of dimensions\n\n      treeNode.x = x / weight;\n      if (nDim > 1) { treeNode.y = y / weight; }\n      if (nDim > 2) { treeNode.z = z / weight; }\n    }\n\n    // For leaf nodes, accumulate forces from coincident nodes.\n    else {\n      q = treeNode;\n      q.x = q.data.x;\n      if (nDim > 1) { q.y = q.data.y; }\n      if (nDim > 2) { q.z = q.data.z; }\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    treeNode.value = strength;\n  }\n\n  function apply(treeNode, x1, arg1, arg2, arg3) {\n    if (!treeNode.value) return true;\n    var x2 = [arg1, arg2, arg3][nDim-1];\n\n    var x = treeNode.x - node.x,\n        y = (nDim > 1 ? treeNode.y - node.y : 0),\n        z = (nDim > 2 ? treeNode.z - node.z : 0),\n        w = x2 - x1,\n        l = x * x + y * y + z * z;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n        if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * treeNode.value * alpha / l;\n        if (nDim > 1) { node.vy += y * treeNode.value * alpha / l; }\n        if (nDim > 2) { node.vz += z * treeNode.value * alpha / l; }\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (treeNode.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (treeNode.data !== node || treeNode.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (nDim > 1 && y === 0) y = jiggle(random), l += y * y;\n      if (nDim > 2 && z === 0) z = jiggle(random), l += z * z;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (treeNode.data !== node) {\n      w = strengths[treeNode.data.index] * alpha / l;\n      node.vx += x * w;\n      if (nDim > 1) { node.vy += y * w; }\n      if (nDim > 2) { node.vz += z * w; }\n    } while (treeNode = treeNode.next);\n  }\n\n  force.initialize = function(_nodes, _numDimensions, _random) {\n    nodes = _nodes;\n    nDim = _numDimensions;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y, z) {\n  var nodes,\n      nDim,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n  if (z == null) z = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = (node.y || 0) - y || 1e-6,\n          dz = (node.z || 0) - z || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy + dz * dz),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      if (nDim>1) { node.vy += dy * k; }\n      if (nDim>2) { node.vz += dz * k; }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(initNodes, numDimensions) {\n    nodes = initNodes;\n    nDim = numDimensions;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = +_, force) : z;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nfunction z$2(z) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      zz;\n\n  if (typeof z !== \"function\") z = constant(z == null ? 0 : +z);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vz += (zz[i] - node.z) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    zz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(zz[i] = +z(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.z = function(_) {\n    return arguments.length ? (z = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : z;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.forceZ = z$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","d3","d3Binarytree","d3Quadtree","d3Octree","d3Dispatch","d3Timer","constant","x","jiggle","random","d","vx","y","vy","z","vz","index","find","nodeById","nodeId","node","get","Error","lcg","s","a","c","m","x$1","y$1","z$1","initialAngleRoll","Math","PI","sqrt","initialAngleYaw","forceCenter","center","force","i","n","nodes","length","sx","sy","sz","strength","initialize","force.initialize","_","force.x","arguments","force.y","force.z","force.strength","forceCollide","collide","radius","apply","treeNode","arg1","arg2","arg3","arg4","arg5","arg6","args","x0","y0","z0","x1","nDim","y1","z1","data","rj","r","ri","xi","yi","zi","l","ri2","tree","k","iterations","binarytree","quadtree","octree","visitAfter","prepare","radii","visit","pow","Array","_nodes","_numDimensions","_random","force.iterations","force.radius","forceLink","link","links","alpha","source","target","distances","strengths","b","bias","Map","map","id","count","initializeStrength","initializeDistance","distance","defaultStrength","min","force.links","force.id","force.distance","forceManyBody","manyBody","accumulate","q","weight","numChildren","abs","value","next","w","x2","theta2","distanceMax2","distanceMin2","Infinity","distanceMin","force.distanceMin","distanceMax","force.distanceMax","theta","force.theta","forceRadial","radial","dx","dy","dz","radiuses","isNaN","initNodes","numDimensions","forceSimulation","simulation","step","tick","event","call","alphaMin","stepper","stop","undefined","alphaTarget","alphaDecay","forces","forEach","fx","velocityDecay","fy","fz","initializeNodes","initialRadius","cbrt","rollAngle","yawAngle","cos","sin","initializeForce","MAX_DIMENSIONS","max","round","timer","dispatch","restart","randomSource","name","delete","set","prototype","slice","shift","d2","closest","on","forceX","x$2","xz","forceY","y$2","yz","forceZ","z$2","zz","Object","defineProperty"]
}
