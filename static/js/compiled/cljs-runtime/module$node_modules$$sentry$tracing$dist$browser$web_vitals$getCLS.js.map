{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB/HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,eAAiBN,OAAA,CAAQ,8EAAR,CAArB,CACIO,aAAeP,OAAA,CAAQ,4EAAR,CADnB,CAEIQ,UAAYR,OAAA,CAAQ,yEAAR,CAFhB,CAGIS,WAAaT,OAAA,CAAQ,0EAAR,CACjBE;OAAA,CAAQQ,MAAR,CAAiBC,QAAS,CAACC,QAAD,CAAWC,gBAAX,CAA6B,CAC1B,IAAK,EAA9B,GAAIA,gBAAJ,GAAmCA,gBAAnC,CAAsD,CAAA,CAAtD,CACA,KAAIC,OAASP,YAAA,CAAaQ,UAAb,CAAwB,KAAxB,CAA+B,CAA/B,CAAb,CAEIC,aAAeA,QAAS,CAACC,KAAD,CAAQ,CAE3BA,KAAL,CAAWC,cAAX,GACIJ,MAEA,CAFOT,KAEP,EAFgBY,KAEhB,CAFsBZ,KAEtB,CADAS,MAAA,CAAOK,OAAP,CAAeC,IAAf,CAAoBH,KAApB,CACA,CAAAI,MAAA,EAHJ,CAFgC,CAFpC,CAUIC,GAAKd,SAAA,CAAUe,OAAV,CAAkB,cAAlB,CAAkCP,YAAlC,CACT,IAAIM,EAAJ,CAAQ,CACJ,IAAAD,OAASf,cAAA,CAAekB,YAAf,CAA4BZ,QAA5B,CAAsCE,MAAtC,CAA8CQ,EAA9C,CAAkDT,gBAAlD,CACTJ,WAAA,CAAWgB,QAAX,CAAoB,QAAS,CAACC,EAAD,CAAK,CAC1BC,EAAAA,CAAcD,EAAdC,CAAiBA,WACrBL,GAAA,CAAGM,WAAH,EAAA,CAAiBC,GAAjB,CAAqBb,YAArB,CACIW,GAAJ,GACIb,MADJ,CACWgB,OADX,CACqB,CAAA,CADrB,CAGAT;MAAA,EAN8B,CAAlC,CAFI,CAb2C,CArBwE;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/getCLS.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bindReporter_1 = require(\"./lib/bindReporter\");\nvar initMetric_1 = require(\"./lib/initMetric\");\nvar observe_1 = require(\"./lib/observe\");\nvar onHidden_1 = require(\"./lib/onHidden\");\nexports.getCLS = function (onReport, reportAllChanges) {\n    if (reportAllChanges === void 0) { reportAllChanges = false; }\n    var metric = initMetric_1.initMetric('CLS', 0);\n    var report;\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        if (!entry.hadRecentInput) {\n            metric.value += entry.value;\n            metric.entries.push(entry);\n            report();\n        }\n    };\n    var po = observe_1.observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter_1.bindReporter(onReport, metric, po, reportAllChanges);\n        onHidden_1.onHidden(function (_a) {\n            var isUnloading = _a.isUnloading;\n            po.takeRecords().map(entryHandler);\n            if (isUnloading) {\n                metric.isFinal = true;\n            }\n            report();\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter_1","initMetric_1","observe_1","onHidden_1","getCLS","exports.getCLS","onReport","reportAllChanges","metric","initMetric","entryHandler","entry","hadRecentInput","entries","push","report","po","observe","bindReporter","onHidden","_a","isUnloading","takeRecords","map","isFinal"]
}
