{
"version":3,
"file":"module$node_modules$stream_http$lib$response.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/stream-http/lib/response.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stream_http$lib$response\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","Buffer","capability","inherits","stream","rStates","readyStates","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","IncomingMessage","exports.IncomingMessage","xhr","response","mode","fetchTimer","self","Readable","call","_mode","headers","rawHeaders","trailers","rawTrailers","on","nextTick","emit","read","reader","then","result","_destroyed","done","clearTimeout","push","value","catch","err","_fetchResponse","url","statusCode","status","statusMessage","statusText","forEach","header","key","toLowerCase","writableStream","writable","WritableStream","write","chunk","Promise","resolve","reject","_resumeFetch","close","abort","body","pipeTo","e","getReader","_xhr","_pos","responseURL","getAllResponseHeaders","split","matches","match","undefined","_charset","overrideMimeType","mimeType","charsetMatch","prototype","_read","IncomingMessage.prototype._read","_onXHRProgress","IncomingMessage.prototype._onXHRProgress","readyState","VBArray","responseBody","toArray","responseText","length","newData","substr","buffer","i","charCodeAt","Uint8Array","MSStreamReader","onprogress","reader.onprogress","byteLength","slice","onload","reader.onload","readAsArrayBuffer"]
}
