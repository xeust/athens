{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$elixir.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtHD,MAAA,CAAOC,OAAP,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAO9B,IAAIC,MAAQ,CACVC,UAAW,OADD,CAEVC,MAAO,MAFG,CAEKC,IAAK,GAFV,CAGVC,QAToBC,mCAMV,CAIVC,SAPAC,qMAGU,CAAZ,CAMIC,OAAS,CACXP,UAAW,QADA,CAEXQ,SAAU,CAACV,IAAD,CAAMW,gBAAN;AAAwBV,KAAxB,CAFC,CAGXW,SAAU,CACR,CACET,MAAO,GADT,CACcC,IAAK,GADnB,CADQ,CAIR,CACED,MAAO,GADT,CACcC,IAAK,GADnB,CAJQ,CAHC,CANb,CAkBIS,SAAW,CACbX,UAAW,UADE,CAEbY,cAAe,mBAFF,CAEuBV,IAAK,MAF5B,CAGbM,SAAU,CACRV,IAAA,CAAKe,OAAL,CAAaf,IAAb,CAAkBgB,UAAlB,CAA8B,CAC5Bb,MA7BgBG,mCA4BY,CAE5BW,WAAY,CAAA,CAFgB,CAA9B,CADQ,CAHG,CAlBf,CA4BIC,MAAQlB,IAAA,CAAKe,OAAL,CAAaF,QAAb,CAAuB,CACjCX,UAAW,OADsB,CAEjCY,cAAe,yCAFkB,CAEyBV,IAAK,YAF9B,CAAvB,CAIRe,KAAAA,CAA0B,CAC5BV,MAD4B,CAE5BT,IAF4B,CAEvBoB,iBAFuB,CAG5BF,KAH4B,CAI5BL,QAJ4B,CAK5B,CACEV,MAAO,IADT,CAL4B,CAQ5B,CACED,UAAW,QADb,CAEEC,MAAO,aAFT,CAGEO,SAAU,CAACD,MAAD,CAAS,CAACN,MAhDDkB,uIAgDA,CAAT,CAHZ;AAIEC,UAAW,CAJb,CAR4B,CAc5B,CACEpB,UAAW,QADb,CAEEC,MAAO,yCAFT,CAGEmB,UAAW,CAHb,CAd4B,CAmB5B,CACEpB,UAAW,QADb,CAEEC,MAAO,2EAFT,CAGEmB,UAAW,CAHb,CAnB4B,CAwB5B,CACEpB,UAAW,UADb,CAEEC,MAAO,gCAFT,CAxB4B,CA4B5B,CACEA,MAAO,OADT,CA5B4B,CA+B5B,CACEA,MAAO,GAAPA,CAAaH,IAAbG,CAAkBoB,cAAlBpB,CAAmC,OADrC,CAEEO,SAAU,CACRV,IADQ,CACHoB,iBADG,CAER,CACElB,UAAW,QADb,CAEEsB,QAAS,KAFX,CAGEd,SAAU,CAACV,IAAD,CAAMW,gBAAN,CAAwBV,KAAxB,CAHZ,CAIEW,SAAU,CACR,CACET,MAAO,GADT,CACcC,IAAK,SADnB,CADQ,CAIR,CACED,MAAO,OADT,CACkBC,IAAK,WADvB,CAJQ,CAJZ,CAFQ,CAFZ;AAkBEkB,UAAW,CAlBb,CA/B4B,CAoD9BrB,MAAA,CAAMS,QAAN,CAAiBS,IAEjB,OAAO,CACLd,QA7FoBC,mCA4Ff,CAELC,SA3FAC,qMAyFK,CAGLE,SAAUS,IAHL,CA7FuB,CADsF;",
"sources":["node_modules/highlight_DOT_js/lib/languages/elixir.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$elixir\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","SUBST","className","begin","end","lexemes","ELIXIR_IDENT_RE","keywords","ELIXIR_KEYWORDS","STRING","contains","BACKSLASH_ESCAPE","variants","FUNCTION","beginKeywords","inherit","TITLE_MODE","endsParent","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","ELIXIR_METHOD_RE","relevance","RE_STARTERS_RE","illegal"]
}
