{
"version":3,
"file":"module$node_modules$$sentry$integrations$dist$reportingobserver.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,+DAAf,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CACIO,QAAUP,OAAA,CAAQ,8CAAR,CADd,CAGIQ,WACH,UAAS,CAACA,WAAD,CAAc,CAEpBA,WAAA,CAAY,KAAZ,CAAuB,OAEvBA,YAAA,CAAY,WAAZ,CAA6B,aAE7BA,YAAA,CAAY,YAAZ,CAA8B,cANV,CAAvB,CAAD,CAOGA,WAPH,GAOmBA,WAPnB,CAOiC,EAPjC,EASIC,OAAAA,CAAmC,QAAS,EAAG,CAI/CA,QAASA,kBAAiB,CAACC,QAAD,CAAW,CAChB,IAAK,EAAtB;AAAIA,QAAJ,GAA2BA,QAA3B,CAAsC,CAClCC,MAAO,CAACH,WAAD,CAAaI,KAAb,CAAoBJ,WAApB,CAAgCK,WAAhC,CAA6CL,WAA7C,CAAyDM,YAAzD,CAD2B,CAAtC,CAGA,KAAA,CAAKJ,QAAL,CAAgBA,QAIhB,KAAA,CAAKK,IAAL,CAAYN,iBAAZ,CAA8BO,EARG,CAarCP,iBAAA,CAAkBQ,SAAlB,CAA4BC,SAA5B,CAAwCC,QAAS,CAACC,CAAD,CAAIC,aAAJ,CAAmB,CAC3Dd,OAAA,CAAQe,yBAAR,EAAL,GAGA,IAOA,CAPKC,cAOL,CAPsBF,aAOtB,CAAA,CALeG,KAAKjB,OAAA,CAAQkB,eAAR,EAALD,CAA+Bf,iBAA/Be,EAAkD,IAAA,CAAKE,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAlDH,CAA2E,CACtFI,SAAU,CAAA,CAD4E,CAEtFjB,MAAO,IAAPA,CAAYD,QAAZC,CAAqBA,KAFiE,CAA3Ea,CAKf,EAASK,OAAT,EAVA,CADgE,CAgBpEpB,kBAAA,CAAkBQ,SAAlB,CAA4BS,OAA5B,CAAsCI,QAAS,CAACC,OAAD,CAAU,CAAA,IAC5CC,EAD4C,CAEjDC,IAAM,IAANA,CAAWV,cAAXU;AAA6B,IAAA,CAAKV,cAAL,EACjC,IAAKU,GAAL,EAAaA,GAAA,CAAIC,cAAJ,CAAmBzB,iBAAnB,CAAb,CAAA,CAGA,IAAI0B,QAAUA,QAAS,CAACC,MAAD,CAAS,CAC5BH,GAAA,CAAII,SAAJ,CAAc,QAAS,CAACC,KAAD,CAAQ,CAC3BA,KAAA,CAAMC,QAAN,CAAe,KAAf,CAAsBH,MAAtB,CAA6BI,GAA7B,CACA,KAAIC,MAAQ,qBAARA,CAAgCL,MAAhCK,CAAuCC,IAAvCD,CAA8C,GAAlD,CACIE,QAAU,sBACd,IAAIP,MAAJ,CAAWQ,IAAX,CAAiB,CAEb,IAAIC,UAAY,EAAhB,CAESC,IAAT,KAASA,IAAT,GAAiBV,OAAjB,CAAwBQ,IAAxB,CACIC,SAAA,CAAUC,IAAV,CAAA,CAAkBV,MAAA,CAAOQ,IAAP,CAAYE,IAAZ,CAEtBR,MAAA,CAAMC,QAAN,CAAe,MAAf,CAAuBM,SAAvB,CACIT,OAAJ,CAAWM,IAAX,GAAoBlC,WAApB,CAAgCI,KAAhC,EACQgC,KAEJ,CAFWR,MAEX,CAFkBQ,IAElB,CAAAD,OAAA,CAAU,CAACC,KAAD,CAAMG,OAAN,EAAiB,EAAjB,CAAqBH,KAArB,CAA0BI,MAA1B,EAAoC,EAApC,CAAA,CAAwCC,IAAxC,CAA6C,GAA7C,CAAA,CAAkDC,IAAlD,EAAV,EAAsEP,OAH1E,GAMQC,KACJ,CADWR,MACX,CADkBQ,IAClB;AAAAD,OAAA,CAAUC,KAAV,CAAeO,OAAf,EAA0BR,OAP9B,CARa,CAkBjBV,GAAA,CAAImB,cAAJ,CAAmBX,KAAnB,CAA2B,IAA3B,CAAkCE,OAAlC,CAtB2B,CAA/B,CAD4B,CA0BhC,IAAI,CACA,IADA,IACSU,UAAY/C,OAAA,CAAQgD,QAAR,CAAiBvB,OAAjB,CADrB,CACgDwB,YAAcF,SAAA,CAAUG,IAAV,EAA9D,CAAgF,CAACD,WAAD,CAAaE,IAA7F,CAAmGF,WAAnG,CAAiHF,SAAA,CAAUG,IAAV,EAAjH,CAEIrB,OAAA,CADaoB,WACb,CADyBlD,KACzB,CAHJ,CAMJ,MAAOqD,KAAP,CAAc,CAAE,IAAAC,IAAM,CAAEC,MAAOF,KAAT,CAAR,CANd,OAOQ,CACJ,GAAI,CACIH,WAAJ,EAAmB,CAACA,WAAD,CAAaE,IAAhC,GAAyCzB,EAAzC,CAA8CqB,SAA9C,CAAwDQ,MAAxD,GAAiE7B,EAAA,CAAG8B,IAAH,CAAQT,SAAR,CADjE,CAAJ,OAGQ,CAAE,GAAIM,GAAJ,CAAS,KAAMA,IAAN,CAAUC,KAAV,CAAX,CAJJ,CApCR,CAHqD,CAiDzDnD,kBAAA,CAAkBO,EAAlB,CAAuB,mBACvB,OAAOP,kBAnFwC,CAAZ,EAqFvCP,QAAA,CAAQO,iBAAR,CAA4BA,MApGgG;",
"sources":["node_modules/@sentry/integrations/dist/reportingobserver.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$integrations$dist$reportingobserver\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\n/** JSDoc */\nvar ReportTypes;\n(function (ReportTypes) {\n    /** JSDoc */\n    ReportTypes[\"Crash\"] = \"crash\";\n    /** JSDoc */\n    ReportTypes[\"Deprecation\"] = \"deprecation\";\n    /** JSDoc */\n    ReportTypes[\"Intervention\"] = \"intervention\";\n})(ReportTypes || (ReportTypes = {}));\n/** Reporting API integration - https://w3c.github.io/reporting/ */\nvar ReportingObserver = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function ReportingObserver(_options) {\n        if (_options === void 0) { _options = {\n            types: [ReportTypes.Crash, ReportTypes.Deprecation, ReportTypes.Intervention],\n        }; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = ReportingObserver.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReportingObserver.prototype.setupOnce = function (_, getCurrentHub) {\n        if (!utils_1.supportsReportingObserver()) {\n            return;\n        }\n        this._getCurrentHub = getCurrentHub;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var observer = new (utils_1.getGlobalObject().ReportingObserver)(this.handler.bind(this), {\n            buffered: true,\n            types: this._options.types,\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        observer.observe();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReportingObserver.prototype.handler = function (reports) {\n        var e_1, _a;\n        var hub = this._getCurrentHub && this._getCurrentHub();\n        if (!hub || !hub.getIntegration(ReportingObserver)) {\n            return;\n        }\n        var _loop_1 = function (report) {\n            hub.withScope(function (scope) {\n                scope.setExtra('url', report.url);\n                var label = \"ReportingObserver [\" + report.type + \"]\";\n                var details = 'No details available';\n                if (report.body) {\n                    // Object.keys doesn't work on ReportBody, as all properties are inheirted\n                    var plainBody = {};\n                    // eslint-disable-next-line guard-for-in\n                    for (var prop in report.body) {\n                        plainBody[prop] = report.body[prop];\n                    }\n                    scope.setExtra('body', plainBody);\n                    if (report.type === ReportTypes.Crash) {\n                        var body = report.body;\n                        // A fancy way to create a message out of crashId OR reason OR both OR fallback\n                        details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n                    }\n                    else {\n                        var body = report.body;\n                        details = body.message || details;\n                    }\n                }\n                hub.captureMessage(label + \": \" + details);\n            });\n        };\n        try {\n            for (var reports_1 = tslib_1.__values(reports), reports_1_1 = reports_1.next(); !reports_1_1.done; reports_1_1 = reports_1.next()) {\n                var report = reports_1_1.value;\n                _loop_1(report);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (reports_1_1 && !reports_1_1.done && (_a = reports_1.return)) _a.call(reports_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ReportingObserver.id = 'ReportingObserver';\n    return ReportingObserver;\n}());\nexports.ReportingObserver = ReportingObserver;\n//# sourceMappingURL=reportingobserver.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","ReportTypes","ReportingObserver","_options","types","Crash","Deprecation","Intervention","name","id","prototype","setupOnce","ReportingObserver.prototype.setupOnce","_","getCurrentHub","supportsReportingObserver","_getCurrentHub","observer","getGlobalObject","handler","bind","buffered","observe","ReportingObserver.prototype.handler","reports","_a","hub","getIntegration","_loop_1","report","withScope","scope","setExtra","url","label","type","details","body","plainBody","prop","crashId","reason","join","trim","message","captureMessage","reports_1","__values","reports_1_1","next","done","e_1_1","e_1","error","return","call"]
}
