{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$integrations$trycatch.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/integrations/trycatch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$integrations$trycatch\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar helpers_1 = require(\"../helpers\");\nvar DEFAULT_EVENT_TARGET = [\n    'EventTarget',\n    'Window',\n    'Node',\n    'ApplicationCache',\n    'AudioTrackList',\n    'ChannelMergerNode',\n    'CryptoOperation',\n    'EventSource',\n    'FileReader',\n    'HTMLUnknownElement',\n    'IDBDatabase',\n    'IDBRequest',\n    'IDBTransaction',\n    'KeyOperation',\n    'MediaController',\n    'MessagePort',\n    'ModalWindow',\n    'Notification',\n    'SVGElementInstance',\n    'Screen',\n    'TextTrack',\n    'TextTrackCue',\n    'TextTrackList',\n    'WebSocket',\n    'WebSocketWorker',\n    'Worker',\n    'XMLHttpRequest',\n    'XMLHttpRequestEventTarget',\n    'XMLHttpRequestUpload',\n];\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function TryCatch(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n        this._options = tslib_1.__assign({ XMLHttpRequest: true, eventTarget: true, requestAnimationFrame: true, setInterval: true, setTimeout: true }, options);\n    }\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        var global = utils_1.getGlobalObject();\n        if (this._options.setTimeout) {\n            utils_1.fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.setInterval) {\n            utils_1.fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.requestAnimationFrame) {\n            utils_1.fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        }\n        if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n            utils_1.fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        if (this._options.eventTarget) {\n            var eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n            eventTarget.forEach(this._wrapEventTarget.bind(this));\n        }\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = helpers_1.wrap(originalCallback, {\n                mechanism: {\n                    data: { function: utils_1.getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TryCatch.prototype._wrapRAF = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function (callback) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return original.call(this, helpers_1.wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: utils_1.getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var global = utils_1.getGlobalObject();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        utils_1.fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = helpers_1.wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: utils_1.getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                helpers_1.wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: utils_1.getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        utils_1.fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                /**\n                 * There are 2 possible scenarios here:\n                 *\n                 * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n                 * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n                 * as a pass-through, and call original `removeEventListener` with it.\n                 *\n                 * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n                 * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n                 * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n                 * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n                 * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n                 *\n                 * When someone adds a handler prior to initialization, and then do it again, but after,\n                 * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n                 * to get rid of the initial handler and it'd stick there forever.\n                 */\n                try {\n                    original.call(this, eventName, fn.__sentry_wrapped__, options);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    utils_1.fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: utils_1.getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = utils_1.getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return helpers_1.wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexports.TryCatch = TryCatch;\n//# sourceMappingURL=trycatch.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","helpers_1","DEFAULT_EVENT_TARGET","TryCatch","options","name","id","_options","__assign","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","setTimeout","prototype","setupOnce","TryCatch.prototype.setupOnce","getGlobalObject","fill","_wrapTimeFunction","bind","_wrapRAF","_wrapXHR","Array","isArray","forEach","_wrapEventTarget","TryCatch.prototype._wrapTimeFunction","original","args","_i","arguments","length","wrap","originalCallback","mechanism","data","function","getFunctionName","handled","type","apply","TryCatch.prototype._wrapRAF","callback","call","handler","TryCatch.prototype._wrapEventTarget","target","proto","hasOwnProperty","eventName","fn","handleEvent","err","__sentry_wrapped__","e","TryCatch.prototype._wrapXHR","originalSend","xhr","xmlHttpRequestProps","prop","wrapOptions","__sentry_original__"]
}
