{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$integrations$express.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/integrations/express.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$integrations$express\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework\n * as well as tracing capabilities\n */\nvar Express = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Express(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Express.id;\n        this._app = options.app;\n        this._methods = options.methods;\n    }\n    /**\n     * @inheritDoc\n     */\n    Express.prototype.setupOnce = function () {\n        if (!this._app) {\n            utils_1.logger.error('ExpressIntegration is missing an Express instance');\n            return;\n        }\n        instrumentMiddlewares(this._app);\n        routeMiddlewares(this._app, this._methods);\n    };\n    /**\n     * @inheritDoc\n     */\n    Express.id = 'Express';\n    return Express;\n}());\nexports.Express = Express;\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction wrap(fn) {\n    var arity = fn.length;\n    switch (arity) {\n        case 2: {\n            return function (_req, res) {\n                var transaction = res.__sentry_transaction;\n                if (transaction) {\n                    var span_1 = transaction.startChild({\n                        description: fn.name,\n                        op: 'middleware',\n                    });\n                    res.once('finish', function () {\n                        span_1.finish();\n                    });\n                }\n                // eslint-disable-next-line prefer-rest-params\n                return fn.apply(this, arguments);\n            };\n        }\n        case 3: {\n            return function (req, res, next) {\n                var transaction = res.__sentry_transaction;\n                var span = transaction &&\n                    transaction.startChild({\n                        description: fn.name,\n                        op: 'middleware',\n                    });\n                fn.call(this, req, res, function () {\n                    if (span) {\n                        span.finish();\n                    }\n                    // eslint-disable-next-line prefer-rest-params\n                    return next.apply(this, arguments);\n                });\n            };\n        }\n        case 4: {\n            return function (err, req, res, next) {\n                var transaction = res.__sentry_transaction;\n                var span = transaction &&\n                    transaction.startChild({\n                        description: fn.name,\n                        op: 'middleware',\n                    });\n                fn.call(this, err, req, res, function () {\n                    if (span) {\n                        span.finish();\n                    }\n                    // eslint-disable-next-line prefer-rest-params\n                    return next.apply(this, arguments);\n                });\n            };\n        }\n        default: {\n            throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n        }\n    }\n}\n/**\n * Takes all the function arguments passed to the original `app.use` call\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapUseArgs(args) {\n    return Array.from(args).map(function (arg) {\n        if (typeof arg === 'function') {\n            return wrap(arg);\n        }\n        if (Array.isArray(arg)) {\n            return arg.map(function (a) {\n                if (typeof a === 'function') {\n                    return wrap(a);\n                }\n                return a;\n            });\n        }\n        return arg;\n    });\n}\n/**\n * Patches original App to utilize our tracing functionality\n */\nfunction patchMiddleware(app, method) {\n    var originalAppCallback = app[method];\n    app[method] = function () {\n        // eslint-disable-next-line prefer-rest-params\n        return originalAppCallback.apply(this, wrapUseArgs(arguments));\n    };\n    return app;\n}\n/**\n * Patches original app.use\n */\nfunction instrumentMiddlewares(app) {\n    patchMiddleware(app, 'use');\n}\n/**\n * Patches original app.METHOD\n */\nfunction routeMiddlewares(app, methods) {\n    if (methods === void 0) { methods = []; }\n    methods.forEach(function (method) {\n        patchMiddleware(app, method);\n    });\n}\n//# sourceMappingURL=express.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","wrap","fn","arity","length","_req","res","transaction","__sentry_transaction","span_1","startChild","description","name","op","once","finish","apply","arguments","req","next","span","call","err","Error","wrapUseArgs","args","Array","from","map","arg","isArray","a","patchMiddleware","app","method","originalAppCallback","routeMiddlewares","methods","forEach","Object","defineProperty","value","utils_1","Express","options","id","_app","_methods","prototype","setupOnce","Express.prototype.setupOnce","logger","error"]
}
