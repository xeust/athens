shadow$provide.module$node_modules$$sentry$utils$dist$node=function(global,require,module,exports){function isNodeEnv(){return"[object process]"===Object.prototype.toString.call("undefined"!==typeof process?process:0)}var process=require("module$node_modules$process$browser");Object.defineProperty(exports,"__esModule",{value:!0});var is_1=require("module$node_modules$$sentry$utils$dist$is"),object_1=require("module$node_modules$$sentry$utils$dist$object");exports.isNodeEnv=isNodeEnv;exports.dynamicRequire=
function(mod,request){return mod.require(request)};var DEFAULT_REQUEST_KEYS="cookies data headers method query_string url".split(" ");exports.extractNodeRequestData=function(req,keys){void 0===keys&&(keys=DEFAULT_REQUEST_KEYS);if(!isNodeEnv())throw Error("Can't get node request data outside of a node environment");var requestData={},headers=req.headers||req.header||{},method=req.method,originalUrl=req.originalUrl||req.url||"",absoluteUrl=("https"===req.protocol||req.secure||(req.socket||{}).encrypted?
"https":"http")+"://"+(req.hostname||req.host||headers.host||"\x3cno host\x3e")+originalUrl;keys.forEach(function(key){switch(key){case "headers":requestData.headers=headers;break;case "method":requestData.method=method;break;case "url":requestData.url=absoluteUrl;break;case "cookies":requestData.cookies=req.cookies||module.require("cookie").parse(headers.cookie||"");break;case "query_string":requestData.query_string=module.require("url").parse(originalUrl||"",!1).query;break;case "data":if("GET"===
method||"HEAD"===method)break;void 0!==req.body&&(requestData.data=is_1.isString(req.body)?req.body:JSON.stringify(object_1.normalize(req.body)));break;default:({}).hasOwnProperty.call(req,key)&&(requestData[key]=req[key])}});return requestData}}
//# sourceMappingURL=module$node_modules$$sentry$utils$dist$node.js.map
