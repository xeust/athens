{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$bindReporter.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,4EAAf,CAAiG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBzIC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,YAAR,CAAuBC,QAAS,CAACC,QAAD,CAAWC,MAAX,CAAmBC,EAAnB,CAAuBC,iBAAvB,CAA0C,CACtE,IAAIC,SACJ,OAAO,SAAS,EAAG,CACXF,EAAJ,EAAUD,MAAV,CAAiBI,OAAjB,EACIH,EAAA,CAAGI,UAAH,EAEgB,EAApB,EAAIL,MAAJ,CAAWJ,KAAX,GACQM,iBADR,EAC6BF,MAD7B,CACoCI,OADpC,EAC4E,QAD5E,GAC+CE,QAD/C,CACwDC,eADxD,IAEQP,MAKI,CALGQ,KAKH,CALWR,MAKX,CALkBJ,KAKlB,EAL2BO,SAK3B,EALwC,CAKxC,EAAAH,MAAA,CAAOQ,KAAP,EAAgBR,MAAhB,CAAuBI,OAAvB,EAAgDK,IAAAA,EAAhD,GAAkCN,SAP9C;CAQYJ,QAAA,CAASC,MAAT,CACA,CAAAG,SAAA,CAAYH,MAAZ,CAAmBJ,KAT/B,CAJe,CAFmD,CAjB+D;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/lib/bindReporter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$bindReporter\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindReporter = function (callback, metric, po, observeAllUpdates) {\n    var prevValue;\n    return function () {\n        if (po && metric.isFinal) {\n            po.disconnect();\n        }\n        if (metric.value >= 0) {\n            if (observeAllUpdates || metric.isFinal || document.visibilityState === 'hidden') {\n                metric.delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta, if the metric is\n                // final, or if no previous value exists (which can happen in the case\n                // of the document becoming hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (metric.delta || metric.isFinal || prevValue === undefined) {\n                    callback(metric);\n                    prevValue = metric.value;\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=bindReporter.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter","exports.bindReporter","callback","metric","po","observeAllUpdates","prevValue","isFinal","disconnect","document","visibilityState","delta","undefined"]
}
