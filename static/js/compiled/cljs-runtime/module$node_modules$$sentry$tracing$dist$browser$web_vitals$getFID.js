shadow$provide.module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var bindReporter_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$bindReporter"),getFirstHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getFirstHidden"),initMetric_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$initMetric"),observe_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$observe"),
onHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden");exports.getFID=function(onReport){var metric=initMetric_1.initMetric("FID"),firstHidden=getFirstHidden_1.getFirstHidden(),entryHandler=function(entry){entry.startTime<firstHidden.timeStamp&&(metric.value=entry.processingStart-entry.startTime,metric.entries.push(entry),metric.isFinal=!0,report())},po=observe_1.observe("first-input",entryHandler),report=bindReporter_1.bindReporter(onReport,metric,po);if(po)onHidden_1.onHidden(function(){po.takeRecords().map(entryHandler);
po.disconnect()},!0);else if(window.perfMetrics&&window.perfMetrics.onFirstInputDelay)window.perfMetrics.onFirstInputDelay(function(value,event){event.timeStamp<firstHidden.timeStamp&&(metric.value=value,metric.isFinal=!0,metric.entries=[{entryType:"first-input",name:event.type,target:event.target,cancelable:event.cancelable,startTime:event.timeStamp,processingStart:event.timeStamp+value}],report())})}}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID.js.map
