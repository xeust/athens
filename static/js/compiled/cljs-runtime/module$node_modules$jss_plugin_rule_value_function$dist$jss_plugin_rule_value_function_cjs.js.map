{
"version":3,
"file":"module$node_modules$jss_plugin_rule_value_function$dist$jss_plugin_rule_value_function_cjs.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,0FAAf,CAA+G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvJC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAIA,KAAIC,QAFJC,QAAyB,CAACC,EAAD,CAAK,CAAE,MAAQA,GAAD,EAAsB,QAAtB,GAAQ,MAAOA,GAAf,EAAmC,SAAnC,EAAgDA,GAAhD,CAAsDA,EAAA,CAAG,SAAH,CAAtD,CAAsEA,EAA/E,CAEhB,CAAgBR,OAAA,CAAQ,wDAAR,CAAhB,CAAd,CACIS,IAAMT,OAAA,CAAQ,sCAAR,CAENU,OAAAA,CAAMC,IAAA,CAAKD,GAAL,EACV,KAAIE,WAAa,UAAbA,CAA0BF,MAA9B,CACIG,SAAW,SAAXA,CAAuB,GAAEH,MA2D7BR,QAAA,CAAQY,OAAR;AA1DAC,QAAuB,EAAG,CACxB,MAAO,CACLC,aAAcA,QAAqB,CAACC,IAAD,CAAOC,IAAP,CAAaC,OAAb,CAAsB,CACvD,GAAoB,UAApB,GAAI,MAAOD,KAAX,CAAgC,MAAO,KACnCE,KAAAA,CAAOX,GAAA,CAAIY,UAAJ,CAAeJ,IAAf,CAAqB,EAArB,CAAyBE,OAAzB,CACXC,KAAA,CAAKP,QAAL,CAAA,CAAiBK,IACjB,OAAOE,KAJgD,CADpD,CAOLE,eAAgBA,QAAuB,CAACC,KAAD,CAAQH,IAAR,CAAc,CAKnD,GAAIR,UAAJ,GAAkBQ,KAAlB,EAA0BP,QAA1B,GAAsCO,KAAtC,CAA4C,MAAOG,MACnD,KAAIC,SAAW,EAAf,CAESC,IAAT,KAASA,IAAT,GAAiBF,MAAjB,CAAwB,CACtB,IAAIlB,MAAQkB,KAAA,CAAME,IAAN,CACS,WAArB,GAAI,MAAOpB,MAAX,GACA,OAAOkB,KAAA,CAAME,IAAN,CACP,CAAAD,QAAA,CAASC,IAAT,CAAA,CAAiBpB,KAFjB,CAFsB,CAQxBe,IAAA,CAAKR,UAAL,CAAA,CAAmBY,QACnB,OAAOD,MAjB4C,CAPhD,CA0BLG,SAAUA,QAAiB,CAACC,IAAD,CAAOP,IAAP,CAAaQ,KAAb,CAAoBT,OAApB,CAA6B,CAKtD,GAHIU,KAGJ,CAJgBT,IACH,CAAUP,QAAV,CAGb,CAAY,CAJIO,IAOd,CAAUG,KAAV;AAAkBM,KAAA,CAAOF,IAAP,CAAlB,EAAkC,EAGhC,KAAKF,IAAIA,IAAT,GAVYL,KAUZ,CAA2BG,KAA3B,CACE,GAAqC,UAArC,GAAI,MAXMH,KAWC,CAAUG,KAAV,CAAgBE,IAAhB,CAAX,CAAiD,CACPnB,OAAA,CAAQ,CAAA,CAAR,CAAe,gEAAf,CACxC,MAF+C,CAP3C,CAiBZ,GAFIkB,IAEJ,CArBgBJ,IAmBD,CAAUR,UAAV,CAEf,CACE,IAAKkB,IAAIA,KAAT,GAAkBN,KAAlB,CAtBcJ,IAuBZ,CAAUK,IAAV,CAAeK,KAAf,CAAsBN,IAAA,CAASM,KAAT,CAAA,CAAgBH,IAAhB,CAAtB,CAA6CR,OAA7C,CAxBkD,CA1BnD,CADiB,CAb6H;",
"sources":["node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jss_plugin_rule_value_function$dist$jss_plugin_rule_value_function_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar warning = _interopDefault(require('tiny-warning'));\nvar jss = require('jss');\n\nvar now = Date.now();\nvar fnValuesNs = \"fnValues\" + now;\nvar fnRuleNs = \"fnStyle\" + ++now;\nfunction functionPlugin() {\n  return {\n    onCreateRule: function onCreateRule(name, decl, options) {\n      if (typeof decl !== 'function') return null;\n      var rule = jss.createRule(name, {}, options);\n      rule[fnRuleNs] = decl;\n      return rule;\n    },\n    onProcessStyle: function onProcessStyle(style, rule) {\n      // We need to extract function values from the declaration, so that we can keep core unaware of them.\n      // We need to do that only once.\n      // We don't need to extract functions on each style update, since this can happen only once.\n      // We don't support function values inside of function rules.\n      if (fnValuesNs in rule || fnRuleNs in rule) return style;\n      var fnValues = {};\n\n      for (var prop in style) {\n        var value = style[prop];\n        if (typeof value !== 'function') continue;\n        delete style[prop];\n        fnValues[prop] = value;\n      } // $FlowFixMe\n\n\n      rule[fnValuesNs] = fnValues;\n      return style;\n    },\n    onUpdate: function onUpdate(data, rule, sheet, options) {\n      var styleRule = rule;\n      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object\n      // will be returned from that function.\n\n      if (fnRule) {\n        // Empty object will remove all currently defined props\n        // in case function rule returns a falsy value.\n        styleRule.style = fnRule(data) || {};\n\n        if (process.env.NODE_ENV === 'development') {\n          for (var prop in styleRule.style) {\n            if (typeof styleRule.style[prop] === 'function') {\n              process.env.NODE_ENV !== \"production\" ? warning(false, '[JSS] Function values inside function rules are not supported.') : void 0;\n              break;\n            }\n          }\n        }\n      }\n\n      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.\n\n      if (fnValues) {\n        for (var _prop in fnValues) {\n          styleRule.prop(_prop, fnValues[_prop](data), options);\n        }\n      }\n    }\n  };\n}\n\nexports.default = functionPlugin;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","warning","_interopDefault","ex","jss","now","Date","fnValuesNs","fnRuleNs","default","functionPlugin","onCreateRule","name","decl","options","rule","createRule","onProcessStyle","style","fnValues","prop","onUpdate","data","sheet","fnRule","_prop"]
}
