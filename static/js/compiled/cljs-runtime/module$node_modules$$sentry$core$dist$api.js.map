{
"version":3,
"file":"module$node_modules$$sentry$core$dist$api.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/core/dist/api.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$core$dist$api\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new utils_1.Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns the prefix to construct Sentry ingestion API endpoints. */\n    API.prototype.getBaseApiEndpoint = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port + (dsn.path ? \"/\" + dsn.path : '') + \"/api/\";\n    };\n    /** Returns the store endpoint URL. */\n    API.prototype.getStoreEndpoint = function () {\n        return this._getIngestEndpoint('store');\n    };\n    /**\n     * Returns the store endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        return this.getStoreEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /**\n     * Returns the envelope endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function () {\n        return this._getEnvelopeEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /**\n     * Returns an object that can be used in request headers.\n     * This is needed for node and the old /store endpoint in sentry\n     */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = this.getBaseApiEndpoint() + \"embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    /** Returns the envelope endpoint URL. */\n    API.prototype._getEnvelopeEndpoint = function () {\n        return this._getIngestEndpoint('envelope');\n    };\n    /** Returns the ingest API endpoint for target. */\n    API.prototype._getIngestEndpoint = function (target) {\n        var base = this.getBaseApiEndpoint();\n        var dsn = this._dsnObject;\n        return \"\" + base + dsn.projectId + \"/\" + target + \"/\";\n    };\n    /** Returns a URL-encoded string with auth config suitable for a query string. */\n    API.prototype._encodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            // We send only the minimum set of required information. See\n            // https://github.com/getsentry/sentry-javascript/issues/2572.\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        return utils_1.urlEncode(auth);\n    };\n    return API;\n}());\nexports.API = API;\n//# sourceMappingURL=api.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils_1","API","dsn","_dsnObject","Dsn","prototype","getDsn","API.prototype.getDsn","getBaseApiEndpoint","API.prototype.getBaseApiEndpoint","protocol","host","port","path","getStoreEndpoint","API.prototype.getStoreEndpoint","_getIngestEndpoint","getStoreEndpointWithUrlEncodedAuth","API.prototype.getStoreEndpointWithUrlEncodedAuth","_encodedAuth","getEnvelopeEndpointWithUrlEncodedAuth","API.prototype.getEnvelopeEndpointWithUrlEncodedAuth","_getEnvelopeEndpoint","getStoreEndpointPath","API.prototype.getStoreEndpointPath","projectId","getRequestHeaders","API.prototype.getRequestHeaders","clientName","clientVersion","header","push","user","pass","join","getReportDialogEndpoint","API.prototype.getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","toString","key","name","encodeURIComponent","email","length","API.prototype._getEnvelopeEndpoint","API.prototype._getIngestEndpoint","target","base","API.prototype._encodedAuth","urlEncode","auth","sentry_key","sentry_version","SENTRY_API_VERSION"]
}
