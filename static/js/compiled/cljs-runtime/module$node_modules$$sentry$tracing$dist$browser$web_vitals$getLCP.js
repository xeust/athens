shadow$provide.module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var bindReporter_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$bindReporter"),getFirstHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getFirstHidden"),initMetric_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$initMetric"),observe_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$observe"),
onHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden"),whenInput_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$whenInput");exports.getLCP=function(onReport,reportAllChanges){void 0===reportAllChanges&&(reportAllChanges=!1);var metric=initMetric_1.initMetric("LCP"),firstHidden=getFirstHidden_1.getFirstHidden(),entryHandler=function(entry){var value=entry.startTime;value<firstHidden.timeStamp?(metric.value=value,metric.entries.push(entry)):
metric.isFinal=!0;report()},po=observe_1.observe("largest-contentful-paint",entryHandler);if(po){var report=bindReporter_1.bindReporter(onReport,metric,po,reportAllChanges);onReport=function(){metric.isFinal||(po.takeRecords().map(entryHandler),metric.isFinal=!0,report())};void whenInput_1.whenInput().then(onReport);onHidden_1.onHidden(onReport,!0)}}}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP.js.map
