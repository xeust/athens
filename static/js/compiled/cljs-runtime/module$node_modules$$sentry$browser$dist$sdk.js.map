{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$sdk.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/sdk.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$sdk\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@sentry/core\");\nvar utils_1 = require(\"@sentry/utils\");\nvar client_1 = require(\"./client\");\nvar helpers_1 = require(\"./helpers\");\nvar integrations_1 = require(\"./integrations\");\nexports.defaultIntegrations = [\n    new core_1.Integrations.InboundFilters(),\n    new core_1.Integrations.FunctionToString(),\n    new integrations_1.TryCatch(),\n    new integrations_1.Breadcrumbs(),\n    new integrations_1.GlobalHandlers(),\n    new integrations_1.LinkedErrors(),\n    new integrations_1.UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = exports.defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = utils_1.getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    if (options.autoSessionTracking === undefined) {\n        options.autoSessionTracking = false;\n    }\n    core_1.initAndBind(client_1.BrowserClient, options);\n    if (options.autoSessionTracking) {\n        startSessionTracking();\n    }\n}\nexports.init = init;\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = core_1.getCurrentHub().lastEventId();\n    }\n    var client = core_1.getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\nexports.showReportDialog = showReportDialog;\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n    return core_1.getCurrentHub().lastEventId();\n}\nexports.lastEventId = lastEventId;\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n    // Noop\n}\nexports.forceLoad = forceLoad;\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n    callback();\n}\nexports.onLoad = onLoad;\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nfunction flush(timeout) {\n    var client = core_1.getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return utils_1.SyncPromise.reject(false);\n}\nexports.flush = flush;\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nfunction close(timeout) {\n    var client = core_1.getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return utils_1.SyncPromise.reject(false);\n}\nexports.close = close;\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n    return helpers_1.wrap(fn)();\n}\nexports.wrap = wrap;\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n    var window = utils_1.getGlobalObject();\n    var hub = core_1.getCurrentHub();\n    /**\n     * We should be using `Promise.all([windowLoaded, firstContentfulPaint])` here,\n     * but, as always, it's not available in the IE10-11. Thanks IE.\n     */\n    var loadResolved = document.readyState === 'complete';\n    var fcpResolved = false;\n    var possiblyEndSession = function () {\n        if (fcpResolved && loadResolved) {\n            hub.endSession();\n        }\n    };\n    var resolveWindowLoaded = function () {\n        loadResolved = true;\n        possiblyEndSession();\n        window.removeEventListener('load', resolveWindowLoaded);\n    };\n    hub.startSession();\n    if (!loadResolved) {\n        // IE doesn't support `{ once: true }` for event listeners, so we have to manually\n        // attach and then detach it once completed.\n        window.addEventListener('load', resolveWindowLoaded);\n    }\n    try {\n        var po = new PerformanceObserver(function (entryList, po) {\n            entryList.getEntries().forEach(function (entry) {\n                if (entry.name === 'first-contentful-paint' && entry.startTime < firstHiddenTime_1) {\n                    po.disconnect();\n                    fcpResolved = true;\n                    possiblyEndSession();\n                }\n            });\n        });\n        // There's no need to even attach this listener if `PerformanceObserver` constructor will fail,\n        // so we do it below here.\n        var firstHiddenTime_1 = document.visibilityState === 'hidden' ? 0 : Infinity;\n        document.addEventListener('visibilitychange', function (event) {\n            firstHiddenTime_1 = Math.min(firstHiddenTime_1, event.timeStamp);\n        }, { once: true });\n        po.observe({\n            type: 'paint',\n            buffered: true,\n        });\n    }\n    catch (e) {\n        fcpResolved = true;\n        possiblyEndSession();\n    }\n}\n//# sourceMappingURL=sdk.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","startSessionTracking","window","utils_1","getGlobalObject","hub","core_1","getCurrentHub","loadResolved","document","readyState","fcpResolved","possiblyEndSession","endSession","resolveWindowLoaded","removeEventListener","startSession","addEventListener","po","PerformanceObserver","entryList","getEntries","forEach","entry","name","startTime","firstHiddenTime_1","disconnect","visibilityState","Infinity","event","Math","min","timeStamp","once","observe","type","buffered","e","Object","defineProperty","value","client_1","helpers_1","integrations_1","defaultIntegrations","Integrations","InboundFilters","FunctionToString","TryCatch","Breadcrumbs","GlobalHandlers","LinkedErrors","UserAgent","init","options","undefined","release","window_1","SENTRY_RELEASE","id","autoSessionTracking","initAndBind","BrowserClient","showReportDialog","eventId","lastEventId","client","getClient","forceLoad","onLoad","callback","flush","timeout","SyncPromise","reject","close","wrap","fn"]
}
