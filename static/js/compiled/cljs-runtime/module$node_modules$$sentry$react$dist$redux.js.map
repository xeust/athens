{
"version":3,
"file":"module$node_modules$$sentry$react$dist$redux.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,4CAAf,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACzGC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CAEIO,UAAYP,OAAA,CAAQ,gDAAR,CAFhB,CAMIQ,eAAiB,CACjBC,kBAAmBA,QAAS,CAACC,MAAD,CAAS,CAAE,MAAOA,OAAT,CADpB,CAEjBC,iBAAkBA,QAAS,CAACC,KAAD,CAAQ,CAAE,MAAOA,MAAP,EAAgB,IAAlB,CAFlB,CA6CrBV,QAAA,CAAQW,mBAAR,CApCAA,QAA4B,CAACC,eAAD,CAAkB,CAE1C,IAAIC,QAAUT,OAAA,CAAQU,QAAR,CAAiBV,OAAA,CAAQU,QAAR,CAAiB,EAAjB;AAAqBR,cAArB,CAAjB,CAAuDM,eAAvD,CACd,OAAO,SAAS,CAACG,IAAD,CAAO,CAAE,MAAO,SAAS,CAACC,OAAD,CAAUC,YAAV,CAAwB,CA8B7D,MAAOF,KAAA,CA7BaG,QAAS,CAACR,KAAD,CAAQF,MAAR,CAAgB,CACzC,IAAIW,SAAWH,OAAA,CAAQN,KAAR,CAAeF,MAAf,CACfH,UAAA,CAAUe,cAAV,CAAyB,QAAS,CAACC,KAAD,CAAQ,CAEtC,IAAIC,kBAAoBT,OAAA,CAAQN,iBAAR,CAA0BC,MAA1B,CACS,YAAjC,GAAI,MAAOc,kBAAX,EAAsE,IAAtE,GAAgDA,iBAAhD,EACID,KAAA,CAAME,aAAN,CAAoB,CAChBC,SAvBSC,cAsBO,CAEhBC,KAAMJ,iBAFU,CAGhBK,KAxBKC,MAqBW,CAApB,CAOAC,kBAAAA,CAAmBhB,OAAA,CAAQJ,gBAAR,CAAyBU,QAAzB,CACS,YAAhC,GAAI,MAAOU,kBAAX;AAAoE,IAApE,GAA+CA,iBAA/C,CACIR,KAAA,CAAMS,UAAN,CA7BIC,aA6BJ,CAAoCF,iBAApC,CADJ,CAIIR,KAAA,CAAMS,UAAN,CAhCIC,aAgCJ,CAAoC,IAApC,CAIAC,kBAAAA,CAA0BnB,OAA1BmB,CAAkCA,uBACC,WAAvC,GAAI,MAAOA,kBAAX,EACIA,iBAAA,CAAwBX,KAAxB,CAA+BF,QAA/B,CAtBkC,CAA1C,CAyBA,OAAOA,SA3BkC,CA6BtC,CAAoBF,YAApB,CA9BsD,CAA1C,CAHmB,CAjB2D;",
"sources":["node_modules/@sentry/react/dist/redux.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$react$dist$redux\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar minimal_1 = require(\"@sentry/minimal\");\nvar ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nvar ACTION_BREADCRUMB_TYPE = 'info';\nvar STATE_CONTEXT_KEY = 'redux.state';\nvar defaultOptions = {\n    actionTransformer: function (action) { return action; },\n    stateTransformer: function (state) { return state || null; },\n};\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions) {\n    // Note: We return an any type as to not have type conflicts.\n    var options = tslib_1.__assign(tslib_1.__assign({}, defaultOptions), enhancerOptions);\n    return function (next) { return function (reducer, initialState) {\n        var sentryReducer = function (state, action) {\n            var newState = reducer(state, action);\n            minimal_1.configureScope(function (scope) {\n                /* Action breadcrumbs */\n                var transformedAction = options.actionTransformer(action);\n                if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n                    scope.addBreadcrumb({\n                        category: ACTION_BREADCRUMB_CATEGORY,\n                        data: transformedAction,\n                        type: ACTION_BREADCRUMB_TYPE,\n                    });\n                }\n                /* Set latest state to scope */\n                var transformedState = options.stateTransformer(newState);\n                if (typeof transformedState !== 'undefined' && transformedState !== null) {\n                    scope.setContext(STATE_CONTEXT_KEY, transformedState);\n                }\n                else {\n                    scope.setContext(STATE_CONTEXT_KEY, null);\n                }\n                /* Allow user to configure scope with latest state */\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                var configureScopeWithState = options.configureScopeWithState;\n                if (typeof configureScopeWithState === 'function') {\n                    configureScopeWithState(scope, newState);\n                }\n            });\n            return newState;\n        };\n        return next(sentryReducer, initialState);\n    }; };\n}\nexports.createReduxEnhancer = createReduxEnhancer;\n//# sourceMappingURL=redux.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","minimal_1","defaultOptions","actionTransformer","action","stateTransformer","state","createReduxEnhancer","enhancerOptions","options","__assign","next","reducer","initialState","sentryReducer","newState","configureScope","scope","transformedAction","addBreadcrumb","category","ACTION_BREADCRUMB_CATEGORY","data","type","ACTION_BREADCRUMB_TYPE","transformedState","setContext","STATE_CONTEXT_KEY","configureScopeWithState"]
}
