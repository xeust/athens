{"version":3,"sources":["athens/views/filesystem.cljs"],"mappings":";;;;AAgBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAWL;;;;AAAA,AAAMC;AAAN,AAIE,AAAMC,AAAQ,AAAA,AAAA,AAACC;AACTC,AAAY;AAAA,AACE,AAAA,AAAAC,AAAWH;AAAX;;AAAA,AACE,AAAA,AAAA,AAACI;;;AACjBC,AAAY,AAAA,AAAA,AAACJ;AACbK,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AALb,AAOE;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAACC,AAAUC,AACfC,AAEgBC,AAEJ,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAWH,AACRY,AAAkBV,AAAiBW,AACjC,AAACL,AAAUV,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAI,AAAA,AAAA,AAAAK,AAAUG,AAEVM;AAFJ,AAGuB,AAAA,AAACG,AAAMT,AAAMU,AAAeC;AAHnD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAKSI,AAQiB,AAAA,AAAA,AAAAf,AAASG;AAbnC,AAe2B,AAAA,AAACS,AAAMT,AAAMa,AAAa,AAAA,AAAAL;AAfrD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoBKF;AApBL,AAqBwB,AAACQ,AAAwB,AAAA,AAAA,AAAAjB,AAASG;AArB1D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBI,AAAA,AAAAA,AAAA,AAAA,AAAKH,AAGqCK,AACrC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACG,AAILI;AAjCL,AAkCwB,AAACS;AAlCzB,AAAA,AAAA,AAAA,AAAA,AAAAlB,AAAA,AAAA,AAAA,AAAA,AAoCKS,AAAmBZ;AApCxB,AAsCwB,AAACsB;AAtCzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAwCKV;AAxCL,AAyCwB,AAAA,AAACG,AAAMT,AAAMU,AAAeC;AAlDpE,AASgB,AA2CDf","names":["athens.views.filesystem/modal-contents-style","athens.views.filesystem/window","loading","re_frame.core.subscribe","close-modal","cljs.core/deref","re-frame.core/dispatch","db-filepath","state","reagent.core.atom","stylefy.core.use_style","athens.views.modal/modal-style","komponentit.modal/modal","js/module$node_modules$$material_ui$icons$FolderOpen.default","athens.views.buttons/button","js/module$node_modules$$material_ui$icons$Close.default","p1__97941#","cljs.core.swap_BANG_","cljs.core/update","cljs.core/not","js/module$node_modules$$material_ui$icons$ArrowBack.default","cljs.core/assoc","athens.electron/create-dialog!","athens.electron/open-dialog!","athens.electron/move-dialog!"],"sourcesContent":["(ns athens.views.filesystem\n  (:require\n    [\"@material-ui/icons/ArrowBack\" :default ArrowBack]\n    [\"@material-ui/icons/Close\" :default Close]\n    [\"@material-ui/icons/FolderOpen\" :default FolderOpen]\n    [athens.electron :as electron]\n    [athens.subs]\n    #_[athens.util :as util]\n    [athens.views.buttons :refer [button]]\n    [athens.views.modal :refer [modal-style]]\n    [komponentit.modal :as modal]\n    [re-frame.core :refer [subscribe dispatch]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n(def modal-contents-style\n  {:display \"flex\"\n   :padding \"1.5rem\"\n   :flex-direction \"column\"\n   :align-items \"center\"\n   :width \"400px\"\n   ::stylefy/manual [[:p {:max-width \"24rem\"\n                          :text-align \"center\"}]\n                     [:button {:font-size \"18px\"}]]})\n\n\n(defn window\n  \"If loading is true, then that means the user has opened the modal and the db was not found on the filesystem.\n  If loading is false, do not allow user to exit modal, and show slightly different UI.\"\n  []\n  (let [loading (subscribe [:loading?])\n        close-modal (fn []\n                      (when-not @loading\n                        (dispatch [:modal/toggle])))\n        db-filepath (subscribe [:db/filepath])\n        state (r/atom {:create false\n                       :input \"\"})]\n    (fn []\n      [:div (use-style modal-style)\n       [modal/modal\n        {:title    [:div.modal__title\n                    [:> FolderOpen]\n                    [:h4 \"Filesystem\"]\n                    (when-not @loading\n                      [button {:on-click close-modal} [:> Close]])]\n         :content  [:div (use-style modal-contents-style)\n                    (if (:create @state)\n                      [:<>\n                       [button {:style    {:align-self \"start\" :padding \"0\"}\n                                :on-click #(swap! state update :create not)}\n                        [:<>\n                         [:> ArrowBack]\n                         [:span \"Back\"]]]\n                       [:div {:style {:display         \"flex\"\n                                      :justify-content \"space-between\"\n                                      :width           \"100%\"\n                                      :margin-top      \"2em\"\n                                      :margin-bottom   \"1em\"}}\n                        [:label \"Database Name\"]\n                        [:input {:value       (:input @state)\n                                 :placeholder \"DB Name\"\n                                 :on-change   #(swap! state assoc :input (.. % -target -value))}]]\n                       [:div {:style {:display         \"flex\"\n                                      :justify-content \"space-between\"\n                                      :width           \"100%\"}}\n                        [:label \"Location\"]\n                        [button {:primary  true\n                                 :on-click #(electron/create-dialog! (:input @state))}\n                         \"Browse\"]]]\n                      [:<>\n                       [:b {:style {:align-self \"flex-start\"}}\n                        (if @loading\n                          \"No DB Found At\"\n                          \"Current Location\")]\n                       [:code {:style {:margin \"1rem 0 2rem 0\"}} @db-filepath]\n                       [:div (use-style {:display         \"flex\"\n                                         :justify-content \"space-between\"\n                                         :align-items     \"center\"\n                                         :width           \"80%\"})\n                        [button {:primary  true\n                                 :on-click #(electron/open-dialog!)}\n                         \"Open\"]\n                        [button {:disabled @loading\n                                 :primary  true\n                                 :on-click #(electron/move-dialog!)}\n                         \"Move\"]\n                        [button {:primary  true\n                                 :on-click #(swap! state update :create not)}\n                         \"Create\"]]])]\n         :on-close close-modal}]])))\n"]}