{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$dsn.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAe,0CAAf,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvGC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CACIO,QAAUP,OAAA,CAAQ,8CAAR,CADd,CAGIQ,UAAY,gEAIZC,OAAAA,CAAqB,QAAS,EAAG,CAEjCA,QAASA,IAAG,CAACC,IAAD,CAAO,CACK,QAApB,GAAI,MAAOA,KAAX,CACI,IAAA,CAAKC,WAAL,CAAiBD,IAAjB,CADJ,CAII,IAAA,CAAKE,eAAL,CAAqBF,IAArB,CAEJ,KAAA,CAAKG,SAAL,EAPe,CAkBnBJ,GAAA,CAAIK,SAAJ,CAAcC,QAAd,CAAyBC,QAAS,CAACC,YAAD,CAAe,CACxB,IAAK,EAA1B;AAAIA,YAAJ,GAA+BA,YAA/B,CAA8C,CAAA,CAA9C,CAD6C,KAEdC,KAAtBC,IAAsBD,CAAUA,IAFI,CAEEE,KAAtCD,IAAsCC,CAAUA,IAFZ,CAEkBC,KAAtDF,IAAsDE,CAAUA,IACzE,OADSF,KACT,CADuHG,QACvH,CAAmB,KAAnB,CADSH,IACT,CAD2II,IAC3I,EAAmCN,YAAA,EAAgBG,IAAhB,CAAuB,GAAvB,CAA6BA,IAA7B,CAAoC,EAAvE,GACK,GADL,CADSD,IACT,CADyBK,IACzB,EACmBH,IAAA,CAAO,GAAP,CAAaA,IAAb,CAAoB,EADvC,EAC6C,GAD7C,EACoDH,IAAA,CAAOA,IAAP,CAAc,GAAd,CAAoBA,IADxE,EADSC,IACT,CAD8FM,SAC9F,CAH6C,CAOjDhB,IAAA,CAAIK,SAAJ,CAAcH,WAAd,CAA4Be,QAAS,CAACC,GAAD,CAAM,CACnCC,GAAAA,CAAQpB,SAAA,CAAUqB,IAAV,CAAeF,GAAf,CACZ,IAAI,CAACC,GAAL,CACI,KAAM,KAAIrB,OAAJ,CAAYuB,WAAZ,CAhCEC,aAgCF,CAAN,CAHmC,IAKnCZ,GAAKb,OAAA,CAAQ0B,MAAR,CAAeJ,GAAA,CAAMK,KAAN,CAAY,CAAZ,CAAf,CAA+B,CAA/B,CAAmCX,IAAAA,CAAWH,EAAA,CAAG,CAAH,CALhB,KAKuBI,KAAOJ,EAAA,CAAG,CAAH,CAL9B,CAKqCe,GAAKf,EAAA,CAAG,CAAH,CAAOC,GAAAA,CAAc,IAAK,EAAZ,GAAAc,EAAA,CAAgB,EAAhB,CAAqBA,EAL7E,KAKiFV,KAAOL,EAAA,CAAG,CAAH,CALxF,CAK+FgB,GAAKhB,EAAA,CAAG,CAAH,CAAOE,GAAAA,CAAc,IAAK,EAAZ,GAAAc,EAAA,CAAgB,EAAhB,CAAqBA,EAC9K,KAAIjB,KAAO,EACPO,GAAAA,CAFyLN,EAAAiB,CAAG,CAAHA,CAG7L;IAAIC,MAAQZ,EAAA,CAAUY,KAAV,CAAgB,GAAhB,CACO,EAAnB,CAAIA,KAAJ,CAAUC,MAAV,GACIpB,IACA,CADOmB,KAAA,CAAMJ,KAAN,CAAY,CAAZ,CAAe,EAAf,CAAA,CAAmBM,IAAnB,CAAwB,GAAxB,CACP,CAAAd,EAAA,CAAYY,KAAA,CAAMG,GAAN,EAFhB,CAIIf,GAAJ,GACQgB,KADR,CACuBhB,EAAA,CAAUG,KAAV,CAAgB,MAAhB,CADvB,IAGQH,EAHR,CAGoBgB,KAAA,CAAa,CAAb,CAHpB,CAMA,KAAA,CAAK7B,eAAL,CAAqB,CAAQY,IAAR,CAAcJ,KAAMA,EAApB,CAAgCF,IAAhC,CAAsCO,UAAWA,EAAjD,CAA4DJ,KAAMA,EAAlE,CAAwEC,SAAUA,GAAlF,CAAkGC,IAAlG,CAArB,CAnBuC,CAsB3Cd,IAAA,CAAIK,SAAJ,CAAcF,eAAd,CAAgC8B,QAAS,CAACC,UAAD,CAAa,CAClD,IAAA,CAAKrB,QAAL,CAAgBqB,UAAhB,CAA2BrB,QAC3B,KAAA,CAAKC,IAAL,CAAYoB,UAAZ,CAAuBpB,IACvB,KAAA,CAAKH,IAAL,CAAYuB,UAAZ,CAAuBvB,IAAvB,EAA+B,EAC/B,KAAA,CAAKI,IAAL,CAAYmB,UAAZ,CAAuBnB,IACvB,KAAA,CAAKH,IAAL,CAAYsB,UAAZ,CAAuBtB,IAAvB,EAA+B,EAC/B,KAAA,CAAKH,IAAL,CAAYyB,UAAZ,CAAuBzB,IAAvB,EAA+B,EAC/B,KAAA,CAAKO,SAAL,CAAiBkB,UAAjB,CAA4BlB,SAPsB,CAUtDhB,IAAA,CAAIK,SAAJ,CAAcD,SAAd;AAA0B+B,QAAS,EAAG,CAClC,IAAIC,MAAQ,IACZ,EAAC,UAAD,CAAa,MAAb,CAAqB,MAArB,CAA6B,WAA7B,CAAA,CAA0CC,OAA1C,CAAkD,QAAS,CAACC,SAAD,CAAY,CACnE,GAAI,CAACF,KAAA,CAAME,SAAN,CAAL,CACI,KAAM,KAAIxC,OAAJ,CAAYuB,WAAZ,CAAwB,eAAxB,CAA+CiB,SAA/C,CAA2D,UAA3D,CAAN,CAF+D,CAAvE,CAKA,IAAI,CAAC,IAAA,CAAKtB,SAAL,CAAeG,KAAf,CAAqB,OAArB,CAAL,CACI,KAAM,KAAIrB,OAAJ,CAAYuB,WAAZ,CAAwB,iCAAxB,CAAiE,IAAjE,CAAsEL,SAAtE,CAAN,CAEJ,GAAsB,MAAtB,GAAI,IAAJ,CAASH,QAAT,EAAkD,OAAlD,GAAgC,IAAhC,CAAqCA,QAArC,CACI,KAAM,KAAIf,OAAJ,CAAYuB,WAAZ,CAAwB,gCAAxB,CAAgE,IAAhE,CAAqER,QAArE,CAAN,CAEJ,GAAI,IAAJ,CAASD,IAAT,EAAiB2B,KAAA,CAAMC,QAAA,CAAS,IAAT,CAAc5B,IAAd,CAAoB,EAApB,CAAN,CAAjB,CACI,KAAM,KAAId,OAAJ,CAAYuB,WAAZ,CAAwB,4BAAxB;AAA4D,IAA5D,CAAiET,IAAjE,CAAN,CAd8B,CAiBtC,OAAOZ,IA5E0B,CAAZ,EA8EzBP,QAAA,CAAQO,GAAR,CAAcA,MAvFyF;",
"sources":["node_modules/@sentry/utils/dist/dsn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$dsn\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar error_1 = require(\"./error\");\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new error_1.SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        if (projectId) {\n            var projectMatch = projectId.match(/^\\d+/);\n            if (projectMatch) {\n                projectId = projectMatch[0];\n            }\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new error_1.SentryError(ERROR_MESSAGE + \": \" + component + \" missing\");\n            }\n        });\n        if (!this.projectId.match(/^\\d+$/)) {\n            throw new error_1.SentryError(ERROR_MESSAGE + \": Invalid projectId \" + this.projectId);\n        }\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new error_1.SentryError(ERROR_MESSAGE + \": Invalid protocol \" + this.protocol);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new error_1.SentryError(ERROR_MESSAGE + \": Invalid port \" + this.port);\n        }\n    };\n    return Dsn;\n}());\nexports.Dsn = Dsn;\n//# sourceMappingURL=dsn.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","error_1","DSN_REGEX","Dsn","from","_fromString","_fromComponents","_validate","prototype","toString","Dsn.prototype.toString","withPassword","path","_a","pass","port","protocol","user","host","projectId","Dsn.prototype._fromString","str","match","exec","SentryError","ERROR_MESSAGE","__read","slice","_b","_c","lastPath","split","length","join","pop","projectMatch","Dsn.prototype._fromComponents","components","Dsn.prototype._validate","_this","forEach","component","isNaN","parseInt"]
}
