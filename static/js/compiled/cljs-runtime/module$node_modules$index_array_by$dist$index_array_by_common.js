shadow$provide.module$node_modules$index_array_by$dist$index_array_by_common=function(global,require,module,exports){function _toConsumableArray(arr){if(Array.isArray(arr)){var JSCompiler_inline_result=0;for(var arr2=Array(arr.length);JSCompiler_inline_result<arr.length;JSCompiler_inline_result++)arr2[JSCompiler_inline_result]=arr[JSCompiler_inline_result];JSCompiler_inline_result=arr2}else JSCompiler_inline_result=void 0;JSCompiler_inline_result||(JSCompiler_inline_result=Symbol.iterator in Object(arr)||
"[object Arguments]"===Object.prototype.toString.call(arr)?Array.from(arr):void 0);if(!(arr=JSCompiler_inline_result))throw new TypeError("Invalid attempt to spread non-iterable instance");return arr}function _toPropertyKey(arg){a:if("object"===typeof arg&&null!==arg){var prim=arg[Symbol.toPrimitive];if(void 0!==prim){arg=prim.call(arg,"string");if("object"!==typeof arg)break a;throw new TypeError("@@toPrimitive must return a primitive value.");}arg=String(arg)}return"symbol"===typeof arg?arg:String(arg)}
module.exports=function(){var list=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],keyAccessors=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],multiItem=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!0,flattenKeys=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1,keys=(keyAccessors instanceof Array?keyAccessors.length?keyAccessors:[void 0]:[keyAccessors]).map(function(key){return{keyAccessor:key,isProp:!(key instanceof Function)}});list=list.reduce(function(res,
item){var iterObj=res,itemVal=item;keys.forEach(function(_ref,idx){var keyAccessor=_ref.keyAccessor;if(_ref.isProp){var _itemVal=itemVal;_ref=_itemVal[keyAccessor];keyAccessor=[keyAccessor].map(_toPropertyKey);if(null==_itemVal)_itemVal={};else{if(null==_itemVal)var target={};else{target={};var sourceKeys=Object.keys(_itemVal),i;for(i=0;i<sourceKeys.length;i++){var key=sourceKeys[i];0<=keyAccessor.indexOf(key)||(target[key]=_itemVal[key])}}if(Object.getOwnPropertySymbols)for(i=Object.getOwnPropertySymbols(_itemVal),
key=0;key<i.length;key++)sourceKeys=i[key],0<=keyAccessor.indexOf(sourceKeys)||Object.prototype.propertyIsEnumerable.call(_itemVal,sourceKeys)&&(target[sourceKeys]=_itemVal[sourceKeys]);_itemVal=target}itemVal=_itemVal}else _ref=keyAccessor(itemVal,idx);idx+1<keys.length?(iterObj.hasOwnProperty(_ref)||(iterObj[_ref]={}),iterObj=iterObj[_ref]):multiItem?(iterObj.hasOwnProperty(_ref)||(iterObj[_ref]=[]),iterObj[_ref].push(itemVal)):iterObj[_ref]=itemVal});return res},{});multiItem instanceof Function&&
function reduce(node){var level=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;level===keys.length?Object.keys(node).forEach(function(k){return node[k]=multiItem(node[k])}):Object.values(node).forEach(function(child){return reduce(child,level+1)})}(list);var result=list;flattenKeys&&(result=[],function flatten(node){var accKeys=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[];accKeys.length===keys.length?result.push({keys:accKeys,vals:node}):Object.entries(node).forEach(function(_ref2){var JSCompiler_inline_result=
Array.isArray(_ref2)?_ref2:void 0;if(!JSCompiler_inline_result)if(Symbol.iterator in Object(_ref2)||"[object Arguments]"===Object.prototype.toString.call(_ref2)){JSCompiler_inline_result=[];var _n=!0,_d=!1,_e=void 0;try{for(var _i=_ref2[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(JSCompiler_inline_result.push(_s.value),2!==JSCompiler_inline_result.length);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i["return"])_i["return"]()}finally{if(_d)throw _e;}}}else JSCompiler_inline_result=
void 0;if(!(_ref2=JSCompiler_inline_result))throw new TypeError("Invalid attempt to destructure non-iterable instance");_i=_ref2[0];return flatten(_ref2[1],[].concat(_toConsumableArray(accKeys),[_i]))})}(list),keyAccessors instanceof Array&&0===keyAccessors.length&&1===result.length&&(result[0].keys=[]));return result}}
//# sourceMappingURL=module$node_modules$index_array_by$dist$index_array_by_common.js.map
