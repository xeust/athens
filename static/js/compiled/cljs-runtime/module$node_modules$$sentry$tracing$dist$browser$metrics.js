shadow$provide.module$node_modules$$sentry$tracing$dist$browser$metrics=function(global,require,module,exports){function addResourceSpans(transaction,entry,resourceName,startTime,duration,timeOrigin){if("xmlhttprequest"!==entry.initiatorType&&"fetch"!==entry.initiatorType){var data={};"transferSize"in entry&&(data["Transfer Size"]=entry.transferSize);"encodedBodySize"in entry&&(data["Encoded Body Size"]=entry.encodedBodySize);"decodedBodySize"in entry&&(data["Decoded Body Size"]=entry.decodedBodySize);
startTime=timeOrigin+startTime;duration=startTime+duration;_startChild(transaction,{description:resourceName,endTimestamp:duration,op:entry.initiatorType?"resource."+entry.initiatorType:"resource",startTimestamp:startTime,data});return duration}}function addPerformanceNavigationTiming(transaction,entry,event,timeOrigin,eventEnd){eventEnd=eventEnd?entry[eventEnd]:entry[event+"End"];(entry=entry[event+"Start"])&&eventEnd&&_startChild(transaction,{description:event,endTimestamp:timeOrigin+utils_2.msToSec(eventEnd),
op:"browser",startTimestamp:timeOrigin+utils_2.msToSec(entry)})}function _startChild(transaction,_a){var startTimestamp=_a.startTimestamp;_a=tslib_1.__rest(_a,["startTimestamp"]);startTimestamp&&transaction.startTimestamp>startTimestamp&&(transaction.startTimestamp=startTimestamp);return transaction.startChild(tslib_1.__assign({startTimestamp},_a))}function isMeasurementValue(value){return"number"===typeof value&&isFinite(value)}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),
utils_1=require("module$node_modules$$sentry$utils$dist$index"),utils_2=require("module$node_modules$$sentry$tracing$dist$utils"),getCLS_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS"),getFID_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID"),getLCP_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP"),getTTFB_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$getTTFB"),getFirstHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getFirstHidden");
global=utils_1.getGlobalObject();require=function(){function MetricsInstrumentation(){this._measurements={};this._performanceCursor=0;global&&global.performance&&(global.performance.mark&&global.performance.mark("sentry-tracing-init"),this._trackCLS(),this._trackLCP(),this._trackFID(),this._trackTTFB())}MetricsInstrumentation.prototype.addPerformanceEntries=function(transaction){var _this=this;if(global&&global.performance&&global.performance.getEntries&&utils_1.browserPerformanceTimeOrigin){utils_1.logger.log("[Tracing] Adding \x26 adjusting spans using Performance API");
var timeOrigin=utils_2.msToSec(utils_1.browserPerformanceTimeOrigin);if(global.document)for(var i=0;i<document.scripts.length;i++)if("true"===document.scripts[i].dataset.entry){var entryScriptSrc=document.scripts[i].src;break}var entryScriptStartTimestamp,tracingInitMarkStartTime;global.performance.getEntries().slice(this._performanceCursor).forEach(function(entry){var startTime=utils_2.msToSec(entry.startTime),duration=utils_2.msToSec(entry.duration);if(!("navigation"===transaction.op&&timeOrigin+
startTime<transaction.startTimestamp))switch(entry.entryType){case "navigation":addPerformanceNavigationTiming(transaction,entry,"unloadEvent",timeOrigin);addPerformanceNavigationTiming(transaction,entry,"redirect",timeOrigin);addPerformanceNavigationTiming(transaction,entry,"domContentLoadedEvent",timeOrigin);addPerformanceNavigationTiming(transaction,entry,"loadEvent",timeOrigin);addPerformanceNavigationTiming(transaction,entry,"connect",timeOrigin);addPerformanceNavigationTiming(transaction,entry,
"secureConnection",timeOrigin,"connectEnd");addPerformanceNavigationTiming(transaction,entry,"domainLookup",timeOrigin);_startChild(transaction,{description:"request",endTimestamp:timeOrigin+utils_2.msToSec(entry.responseEnd),op:"browser",startTimestamp:timeOrigin+utils_2.msToSec(entry.requestStart)});_startChild(transaction,{description:"response",endTimestamp:timeOrigin+utils_2.msToSec(entry.responseEnd),op:"browser",startTimestamp:timeOrigin+utils_2.msToSec(entry.responseStart)});break;case "mark":case "paint":case "measure":var measureStartTimestamp=
timeOrigin+startTime;_startChild(transaction,{description:entry.name,endTimestamp:measureStartTimestamp+duration,op:entry.entryType,startTimestamp:measureStartTimestamp});void 0===tracingInitMarkStartTime&&"sentry-tracing-init"===entry.name&&(tracingInitMarkStartTime=measureStartTimestamp);duration=getFirstHidden_1.getFirstHidden();duration=entry.startTime<duration.timeStamp;"first-paint"===entry.name&&duration&&(utils_1.logger.log("[Measurements] Adding FP"),_this._measurements.fp={value:entry.startTime},
_this._measurements["mark.fp"]={value:measureStartTimestamp});"first-contentful-paint"===entry.name&&duration&&(utils_1.logger.log("[Measurements] Adding FCP"),_this._measurements.fcp={value:entry.startTime},_this._measurements["mark.fcp"]={value:measureStartTimestamp});break;case "resource":measureStartTimestamp=entry.name.replace(window.location.origin,""),entry=addResourceSpans(transaction,entry,measureStartTimestamp,startTime,duration,timeOrigin),void 0===entryScriptStartTimestamp&&-1<(entryScriptSrc||
"").indexOf(measureStartTimestamp)&&(entryScriptStartTimestamp=entry)}});void 0!==entryScriptStartTimestamp&&void 0!==tracingInitMarkStartTime&&_startChild(transaction,{description:"evaluation",endTimestamp:tracingInitMarkStartTime,op:"script",startTimestamp:entryScriptStartTimestamp});this._performanceCursor=Math.max(performance.getEntries().length-1,0);this._trackNavigator(transaction);"pageload"===transaction.op&&transaction.setMeasurements(this._measurements)}};MetricsInstrumentation.prototype._trackCLS=
function(){var _this=this;getCLS_1.getCLS(function(metric){metric.entries.pop()&&(utils_1.logger.log("[Measurements] Adding CLS"),_this._measurements.cls={value:metric.value})})};MetricsInstrumentation.prototype._trackNavigator=function(transaction){var navigator=global.navigator;if(navigator){var connection=navigator.connection;connection&&(connection.effectiveType&&transaction.setTag("effectiveConnectionType",connection.effectiveType),connection.type&&transaction.setTag("connectionType",connection.type),
isMeasurementValue(connection.rtt)&&(this._measurements["connection.rtt"]={value:connection.rtt}),isMeasurementValue(connection.downlink)&&(this._measurements["connection.downlink"]={value:connection.downlink}));isMeasurementValue(navigator.deviceMemory)&&transaction.setTag("deviceMemory",String(navigator.deviceMemory));isMeasurementValue(navigator.hardwareConcurrency)&&transaction.setTag("hardwareConcurrency",String(navigator.hardwareConcurrency))}};MetricsInstrumentation.prototype._trackLCP=function(){var _this=
this;getLCP_1.getLCP(function(metric){var entry=metric.entries.pop();if(entry){var timeOrigin=utils_2.msToSec(performance.timeOrigin);entry=utils_2.msToSec(entry.startTime);utils_1.logger.log("[Measurements] Adding LCP");_this._measurements.lcp={value:metric.value};_this._measurements["mark.lcp"]={value:timeOrigin+entry}}})};MetricsInstrumentation.prototype._trackFID=function(){var _this=this;getFID_1.getFID(function(metric){var entry=metric.entries.pop();if(entry){var timeOrigin=utils_2.msToSec(performance.timeOrigin);
entry=utils_2.msToSec(entry.startTime);utils_1.logger.log("[Measurements] Adding FID");_this._measurements.fid={value:metric.value};_this._measurements["mark.fid"]={value:timeOrigin+entry}}})};MetricsInstrumentation.prototype._trackTTFB=function(){var _this=this;getTTFB_1.getTTFB(function(metric){var _a,entry=metric.entries.pop();entry&&(utils_1.logger.log("[Measurements] Adding TTFB"),_this._measurements.ttfb={value:metric.value},metric=metric.value-(_a=metric.entries[0],null!==_a&&void 0!==_a?_a:
entry).requestStart,_this._measurements["ttfb.requestTime"]={value:metric})})};return MetricsInstrumentation}();exports.MetricsInstrumentation=require;exports.addResourceSpans=addResourceSpans;exports._startChild=_startChild}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$metrics.js.map
