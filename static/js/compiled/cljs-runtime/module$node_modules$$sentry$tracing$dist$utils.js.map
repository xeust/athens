{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$utils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,MAAQN,OAAA,CAAQ,4CAAR,CACZE,QAAA,CAAQK,kBAAR,CAA6B,yDAa7BL,QAAA,CAAQM,iBAAR,CAHAA,QAA0B,CAACC,OAAD,CAAU,CAChC,MAAO,kBAAP,EAA6BA,QAA7B,EAAwC,eAAxC,EAA2DA,QAD3B,CA6BpCP,QAAA,CAAQQ,sBAAR,CAlBAA,QAA+B,CAACC,WAAD,CAAc,CAEzC,GADIC,WACJ,CADcD,WAAA,CAAYE,KAAZ,CAAkBX,OAAlB,CAA0BK,kBAA1B,CACd,CAAa,CACT,IAAIO;AAAgB,IAAK,EACN,IAAnB,GAAIF,WAAA,CAAQ,CAAR,CAAJ,CACIE,aADJ,CACoB,CAAA,CADpB,CAGwB,GAHxB,GAGSF,WAAA,CAAQ,CAAR,CAHT,GAIIE,aAJJ,CAIoB,CAAA,CAJpB,CAMA,OAAO,CACHC,QAASH,WAAA,CAAQ,CAAR,CADN,CAEYE,aAFZ,CAGHE,aAAcJ,WAAA,CAAQ,CAAR,CAHX,CARE,CAF4B,CAyB7CV,QAAA,CAAQe,oBAAR,CALAA,QAA6B,CAACC,GAAD,CAAM,CACnB,IAAK,EAAjB,GAAIA,GAAJ,GAAsBA,GAAtB,CAA4BZ,KAAA,CAAMa,aAAN,EAA5B,CAD+B,KAE3BC,EAF2B,CAEvBC,EACR,OAAgF,KAAzE,IAACA,EAAD,CAAqB,IAAf,IAACD,EAAD,CAAMF,GAAN,GAA8B,IAAK,EAAnC,GAAuBE,EAAvB,CAAuC,IAAK,EAA5C,CAAgDA,EAAA,CAAGE,QAAH,EAAtD,GAAwF,IAAK,EAA7F,GAAiFD,EAAjF,CAAiG,IAAK,EAAtG,CAA0GA,EAAA,CAAGE,cAAH,EAHlF,CAanCrB,QAAA,CAAQsB,OAAR,CAHAA,QAAgB,CAACC,IAAD,CAAO,CACnB,MAAOA,KAAP,CAAc,GADK,CAWvBvB,QAAA,CAAQwB,OAAR,CAHAA,QAAgB,CAACD,IAAD,CAAO,CACnB,MAAc,IAAd,CAAOA,IADY,CAKnBE,OAAAA,CAAU3B,OAAA,CAAQ,8CAAR,CACdE;OAAA,CAAQ0B,wBAAR,CAAmCD,MAAnC,CAA2CC,wBApEgE;",
"sources":["node_modules/@sentry/tracing/dist/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$utils\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hub_1 = require(\"@sentry/hub\");\nexports.TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$');\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(options) {\n    return 'tracesSampleRate' in options || 'tracesSampler' in options;\n}\nexports.hasTracingEnabled = hasTracingEnabled;\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n    var matches = traceparent.match(exports.TRACEPARENT_REGEXP);\n    if (matches) {\n        var parentSampled = void 0;\n        if (matches[3] === '1') {\n            parentSampled = true;\n        }\n        else if (matches[3] === '0') {\n            parentSampled = false;\n        }\n        return {\n            traceId: matches[1],\n            parentSampled: parentSampled,\n            parentSpanId: matches[2],\n        };\n    }\n    return undefined;\n}\nexports.extractTraceparentData = extractTraceparentData;\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(hub) {\n    if (hub === void 0) { hub = hub_1.getCurrentHub(); }\n    var _a, _b;\n    return (_b = (_a = hub) === null || _a === void 0 ? void 0 : _a.getScope()) === null || _b === void 0 ? void 0 : _b.getTransaction();\n}\nexports.getActiveTransaction = getActiveTransaction;\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n    return time / 1000;\n}\nexports.msToSec = msToSec;\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n    return time * 1000;\n}\nexports.secToMs = secToMs;\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nvar utils_1 = require(\"@sentry/utils\");\nexports.stripUrlQueryAndFragment = utils_1.stripUrlQueryAndFragment;\n//# sourceMappingURL=utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","hub_1","TRACEPARENT_REGEXP","hasTracingEnabled","options","extractTraceparentData","traceparent","matches","match","parentSampled","traceId","parentSpanId","getActiveTransaction","hub","getCurrentHub","_a","_b","getScope","getTransaction","msToSec","time","secToMs","utils_1","stripUrlQueryAndFragment"]
}
