{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$browsertracing.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAe,+DAAf,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmG5HC,QAASA,iBAAgB,EAAG,CACxB,IAAIC,OAASC,cAAA,CAAe,cAAf,CACb,IAAID,MAAJ,CACI,MAAOE,QAAA,CAAQC,sBAAR,CAA+BH,MAA/B,CAHa,CAS5BC,QAASA,eAAc,CAACG,QAAD,CAAW,CAE9B,MAAO,CADHC,QACG,CADEC,QAAA,CAASC,aAAT,CAAuB,eAAvB,CAAsCH,QAAtC,CAAiD,GAAjD,CACF,EAAKC,QAAA,CAAGG,YAAH,CAAgB,SAAhB,CAAL,CAAkC,IAFX,CA3GlCC,MAAA,CAAOC,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAAEa,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUhB,OAAA,CAAQ,iCAAR,CAAd,CACIiB;AAAUjB,OAAA,CAAQ,8CAAR,CADd,CAEIkB,gBAAkBlB,OAAA,CAAQ,wDAAR,CAClBmB,OAAAA,CAAoBnB,OAAA,CAAQ,0DAAR,CACxB,KAAIoB,aAAepB,OAAA,CAAQ,qDAAR,CAAnB,CACIM,QAAUN,OAAA,CAAQ,gDAAR,CADd,CAEIqB,gBAAkBrB,OAAA,CAAQ,gEAAR,CAFtB,CAGIsB,UAAYtB,OAAA,CAAQ,0DAAR,CAHhB;AAIIuB,UAAYvB,OAAA,CAAQ,0DAAR,CACZwB,QAAAA,CAAWxB,OAAA,CAAQ,yDAAR,CACfE,QAAA,CAAQuB,wCAAR,CAAmD,GACnD,KAAIC,gCAAkCV,OAAA,CAAQW,QAAR,CAAiB,CAAEC,YAAaT,MAAbS,CAA+BC,oBAAjC,CAAuDC,2BAA4B,CAAA,CAAnF,CAAyFC,uBAAwB7B,OAAxB6B,CAAgCN,wCAAzH,CAAmKO,uBAAwBR,OAAxBQ,CAAiCC,6BAApM,CAAmOC,iCAAkC,CAAA,CAArQ,CAA2QC,2BAA4B,CAAA,CAAvS,CAAjB;AAAgUZ,SAAhU,CAA0Ua,kCAA1U,CAQlCC,QAAAA,CAAgC,QAAS,EAAG,CAC5CA,QAASA,eAAc,CAACC,QAAD,CAAW,CAI9B,IAAA,CAAKC,IAAL,CAAYF,cAAZ,CAA2BG,EAC3B,KAAA,CAAKC,QAAL,CAAgB,IAAInB,SAAJ,CAAcoB,sBAC9B,KAAA,CAAKC,mBAAL,CAA2B,CAAA,CAC3B,KAAIC,eAAiBrB,SAAjBqB,CAA2BR,kCAA3BQ,CAA8DA,cAE9DN,SAAJ,EACIA,QADJ,CACaM,cADb,EAEIC,KAAA,CAAMC,OAAN,CAAcR,QAAd,CAAuBM,cAAvB,CAFJ,EAGuC,CAHvC,GAGIN,QAHJ,CAGaM,cAHb,CAG4BG,MAH5B,CAIIH,cAJJ,CAIqBN,QAJrB,CAI8BM,cAJ9B,CAOI,IAPJ,CAOSD,mBAPT,CAO+B,CAAA,CAE/B,KAAA,CAAKK,OAAL,CAAehC,OAAA,CAAQW,QAAR,CAAiBX,OAAA,CAAQW,QAAR,CAAiBX,OAAA,CAAQW,QAAR,CAAiB,EAAjB;AAAqBD,+BAArB,CAAjB,CAAwEY,QAAxE,CAAjB,CAAoG,CAAkBM,cAAlB,CAApG,CAlBe,CAuBlCP,cAAA,CAAeY,SAAf,CAAyBC,SAAzB,CAAqCC,QAAS,CAACC,CAAD,CAAIC,aAAJ,CAAmB,CAC7D,IAAIC,MAAQ,IACZ,KAAA,CAAKC,cAAL,CAAsBF,aAClB,KAAJ,CAASV,mBAAT,GACI1B,OAAA,CAAQuC,MAAR,CAAeC,IAAf,CAAoB,0GAApB,CACA,CAAAxC,OAAA,CAAQuC,MAAR,CAAeC,IAAf,CAAoB,mDAApB,CAA0ElC,SAA1E,CAAoFa,kCAApF,CAAuHQ,cAAvH,CAFJ,CAKIc,EAAAA,CAAK,IAALA,CAAUV,OAAShB,cAAAA,CAAyB0B,CAAzB1B,CAA4BA,sBARU;IAQkJF,2BAA6B4B,CAA7B5B,CAAgCA,0BARlL,CAQ8M6B,WAAaD,CAAbC,CAAgBA,UAR9N,CAQ0OC,SAAWF,CAAXE,CAAcA,QARxP,CAQkQhB,eAAiBc,CAAjBd,CAAoBA,cARtR,CAQsSiB,2BAA6BH,CAA7BG,CAAgCA,0BACnY7B,cAAA,CAAuB,QAAS,CAAC8B,OAAD,CAAU,CAAE,MAAOR,MAAA,CAAMS,uBAAN,CAA8BD,OAA9B,CAAT,CAA1C,CADgLJ,CAChL,CADmLvB,0BACnL,CAD8GuB,CAC9G,CADiHxB,gCACjH,CACIJ,2BAAJ,EACIT,eAAA,CAAgB2C,8BAAhB,EAEJzC,UAAA,CAAU0C,8BAAV,CAAyC,CAAcN,UAAd,CAAoCC,QAApC,CAA8DhB,cAA9D,CAA0GiB,0BAA1G,CAAzC,CAb6D,CAgBjExB;cAAA,CAAeY,SAAf,CAAyBc,uBAAzB,CAAmDG,QAAS,CAACJ,OAAD,CAAU,CAClE,IAAIR,MAAQ,IACZ,IAAK,IAAL,CAAUC,cAAV,CAAA,CAFkE,IAO9DG,GAAK,IAALA,CAAUV,OAPoD,CAO3CmB,eAAiBT,EAAjBS,CAAoBA,cAPuB,CAOPvC,YAAc8B,EAAd9B,CAAiBA,WAPV,CAOuBG,uBAAyB2B,EAAzB3B,CAA4BA,sBACjHqC,GAAAA,CAAyC,UAAf,GAAAN,OAAA,CAAQO,EAAR,CAA4BlE,gBAAA,EAA5B,CAAiDmE,IAAAA,EAC3EC,QAAAA,CAAkBvD,OAAA,CAAQW,QAAR,CAAiBX,OAAA,CAAQW,QAAR,CAAiBX,OAAA,CAAQW,QAAR,CAAiB,EAAjB,CAAqBmC,OAArB,CAAjB,CAAgDM,EAAhD,CAAjB,CAA2F,CAAEI,QAAS,CAAA,CAAX,CAA3F,CAClBC,eAAAA,CAA4C,UAA1B,GAAA,MAAON,eAAP,CAAuCA,cAAA,CAAeI,OAAf,CAAvC,CAAyEA,OAG3FG,eAAAA,CAAmCJ,IAAAA,EAApB,GAAAG,cAAA,CAAgCzD,OAAA,CAAQW,QAAR,CAAiBX,OAAA,CAAQW,QAAR,CAAiB,EAAjB;AAAqB4C,OAArB,CAAjB,CAAwD,CAAEI,QAAS,CAAA,CAAX,CAAxD,CAAhC,CAA8GF,cACpG,EAAA,CAA7B,GAAIC,cAAJ,CAAiBC,OAAjB,EACI1D,OAAA,CAAQuC,MAAR,CAAeoB,GAAf,CAAmB,0BAAnB,CAAgDF,cAAhD,CAA6DL,EAA7D,CAAkE,yCAAlE,CAEAQ,QAAAA,CAAM,IAAA,CAAKtB,cAAL,EACNuB,YAAAA,CAAkB5D,eAAA,CAAgB6D,oBAAhB,CAAqCF,OAArC,CAA0CH,cAA1C,CAAwD9C,WAAxD,CAAqE,CAAA,CAArE,CACtBX,QAAA,CAAQuC,MAAR,CAAeoB,GAAf,CAAmB,qBAAnB,CAA2CF,cAA3C,CAAwDL,EAAxD,CAA6D,uBAA7D,CACAS,YAAA,CAAgBE,4BAAhB,CAA6C,QAAS,CAACC,WAAD,CAAcC,YAAd,CAA4B,CAC9E5B,KAAA,CAAMb,QAAN,CAAe0C,qBAAf,CAAqCF,WAArC,CAC0B;IAAA,YAAA3E,OAAA,CAAQ8E,OAAR,CAAgBrD,sBAAhB,CAAA,CAgC9BsD,KAhCoFH,YAgCpFG,CAhCuEJ,WAgCvEI,CAAkCC,cAhCkDJ,aAkCxF,GAD6CG,IAC7C,CADoDE,WACpD,EAD0E,CAC1E,CADmEF,IACnE,IAlC2EJ,WAmCvE,CAAYO,SAAZ,CAAsBpE,YAAtB,CAAmCqE,UAAnC,CAA8CC,gBAA9C,CACA,CApCuET,WAoCvE,CAAYU,MAAZ,CAAmB,gCAAnB,CAAqD,MAArD,CAFJ,CApCsF,CAAlF,CAIA,OAAOb,YAtBP,CACI7D,OAAA,CAAQuC,MAAR,CAAeC,IAAf,CAAoB,2BAApB,CAAkDK,OAAlD,CAA0DO,EAA1D,CAA+D,iDAA/D,CAH8D,CA6BtEhC,eAAA,CAAeG,EAAf,CAAoB,gBACpB,OAAOH,eAtEqC,CAAZ,EAwEpCnC,QAAA,CAAQmC,cAAR,CAAyBA,OAazBnC,QAAA,CAAQC,gBAAR;AAA2BA,gBAM3BD,QAAA,CAAQG,cAAR,CAAyBA,cAhHmG;",
"sources":["node_modules/@sentry/tracing/dist/browser/browsertracing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$browsertracing\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar hubextensions_1 = require(\"../hubextensions\");\nvar idletransaction_1 = require(\"../idletransaction\");\nvar spanstatus_1 = require(\"../spanstatus\");\nvar utils_2 = require(\"../utils\");\nvar backgroundtab_1 = require(\"./backgroundtab\");\nvar metrics_1 = require(\"./metrics\");\nvar request_1 = require(\"./request\");\nvar router_1 = require(\"./router\");\nexports.DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = tslib_1.__assign({ idleTimeout: idletransaction_1.DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: exports.DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: router_1.defaultRoutingInstrumentation, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, request_1.defaultRequestInstrumentionOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        this._metrics = new metrics_1.MetricsInstrumentation();\n        this._emitOptionsWarning = false;\n        var tracingOrigins = request_1.defaultRequestInstrumentionOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options &&\n            _options.tracingOrigins &&\n            Array.isArray(_options.tracingOrigins) &&\n            _options.tracingOrigins.length !== 0) {\n            tracingOrigins = _options.tracingOrigins;\n        }\n        else {\n            this._emitOptionsWarning = true;\n        }\n        this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            utils_1.logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            utils_1.logger.warn(\"[Tracing] We added a reasonable default for you: \" + request_1.defaultRequestInstrumentionOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, routingInstrumentation = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        routingInstrumentation(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            backgroundtab_1.registerBackgroundTabDetection();\n        }\n        request_1.registerRequestInstrumentation({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            utils_1.logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? tslib_1.__assign(tslib_1.__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            utils_1.logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        var hub = this._getCurrentHub();\n        var idleTransaction = hubextensions_1.startIdleTransaction(hub, finalContext, idleTimeout, true);\n        utils_1.logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(utils_2.secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexports.BrowserTracing = BrowserTracing;\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nfunction getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return utils_2.extractTraceparentData(header);\n    }\n    return undefined;\n}\nexports.getHeaderContext = getHeaderContext;\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n    var el = document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\nexports.getMetaContent = getMetaContent;\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus(spanstatus_1.SpanStatus.DeadlineExceeded);\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getHeaderContext","header","getMetaContent","utils_2","extractTraceparentData","metaName","el","document","querySelector","getAttribute","Object","defineProperty","value","tslib_1","utils_1","hubextensions_1","idletransaction_1","spanstatus_1","backgroundtab_1","metrics_1","request_1","router_1","DEFAULT_MAX_TRANSACTION_DURATION_SECONDS","DEFAULT_BROWSER_TRACING_OPTIONS","__assign","idleTimeout","DEFAULT_IDLE_TIMEOUT","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","defaultRoutingInstrumentation","startTransactionOnLocationChange","startTransactionOnPageLoad","defaultRequestInstrumentionOptions","BrowserTracing","_options","name","id","_metrics","MetricsInstrumentation","_emitOptionsWarning","tracingOrigins","Array","isArray","length","options","prototype","setupOnce","BrowserTracing.prototype.setupOnce","_","getCurrentHub","_this","_getCurrentHub","logger","warn","_a","traceFetch","traceXHR","shouldCreateSpanForRequest","context","_createRouteTransaction","registerBackgroundTabDetection","registerRequestInstrumentation","BrowserTracing.prototype._createRouteTransaction","beforeNavigate","parentContextFromHeader","op","undefined","expandedContext","trimEnd","modifiedContext","finalContext","sampled","log","hub","idleTransaction","startIdleTransaction","registerBeforeFinishCallback","transaction","endTimestamp","addPerformanceEntries","secToMs","diff","startTimestamp","maxDuration","setStatus","SpanStatus","DeadlineExceeded","setTag"]
}
