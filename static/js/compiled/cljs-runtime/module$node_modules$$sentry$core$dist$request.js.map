{
"version":3,
"file":"module$node_modules$$sentry$core$dist$request.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAeAH,QAAA,CAAQI,sBAAR,CAbAA,QAA+B,CAACC,OAAD,CAAUC,GAAV,CAAe,CAC1C,IAAIC,gBAAkBC,IAAA,CAAKC,SAAL,CAAe,CACjCC,QAAS,CAAA,IAAIC,IAAJ,EAAWC,WAAX,EADwB,CAAf,CAAtB,CAGIC,YAAcL,IAAA,CAAKC,SAAL,CAAe,CAC7BK,KAAM,SADuB,CAAf,CAGlB,OAAO,CACHC,KAAMR,eAANQ,CAAwB,IAAxBA,CAA+BF,WAA/BE,CAA6C,IAA7CA,CAAoDP,IAAA,CAAKC,SAAL,CAAeJ,OAAf,CADjD,CAEHS,KAAM,SAFH,CAGHE,IAAKV,GAAA,CAAIW,qCAAJ,EAHF,CAPmC,CA8C9CjB,QAAA,CAAQkB,oBAAR,CA/BAA,QAA6B,CAACC,KAAD;AAAQb,GAAR,CAAa,CACtC,IAAIc,YAA6B,aAA7BA,GAAcD,KAAdC,CAAoBN,IACpBO,IAAAA,CAAM,CACNN,KAAMP,IAAA,CAAKC,SAAL,CAAeU,KAAf,CADA,CAENL,KAAMK,KAANL,CAAYA,IAAZA,EAAoB,OAFd,CAGNE,IAAKI,WAAA,CAAcd,GAAA,CAAIW,qCAAJ,EAAd,CAA4DX,GAAA,CAAIgB,kCAAJ,EAH3D,CAUNF,YAAJ,GACQb,WAcJ,CAdsBC,IAAA,CAAKC,SAAL,CAAe,CACjCc,SAAUJ,KAAVI,CAAgBA,QADiB,CAIjCb,QAAS,CAAA,IAAIC,IAAJ,EAAWC,WAAX,EAJwB,CAAf,CActB,CARIC,KAQJ,CARkBL,IAAA,CAAKC,SAAL,CAAe,CAC7BK,KAAMK,KAANL,CAAYA,IADiB,CAAf,CAQlB,CAAAO,GAAA,CAAIN,IAAJ,CADeR,WACf,CADiC,IACjC,CADwCM,KACxC,CADsD,IACtD,CAD6DQ,GAC7D,CADiEN,IAdrE,CAiBA,OAAOM,IA7B+B,CAlBgE;",
"sources":["node_modules/@sentry/core/dist/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$core$dist$request\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Creates a SentryRequest from an event. */\nfunction sessionToSentryRequest(session, api) {\n    var envelopeHeaders = JSON.stringify({\n        sent_at: new Date().toISOString(),\n    });\n    var itemHeaders = JSON.stringify({\n        type: 'session',\n    });\n    return {\n        body: envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + JSON.stringify(session),\n        type: 'session',\n        url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n    };\n}\nexports.sessionToSentryRequest = sessionToSentryRequest;\n/** Creates a SentryRequest from an event. */\nfunction eventToSentryRequest(event, api) {\n    var useEnvelope = event.type === 'transaction';\n    var req = {\n        body: JSON.stringify(event),\n        type: event.type || 'event',\n        url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n        var envelopeHeaders = JSON.stringify({\n            event_id: event.event_id,\n            // We need to add * 1000 since we divide it by 1000 by default but JS works with ms precision\n            // The reason we use timestampWithMs here is that all clocks across the SDK use the same clock\n            sent_at: new Date().toISOString(),\n        });\n        var itemHeaders = JSON.stringify({\n            type: event.type,\n        });\n        // The trailing newline is optional. We intentionally don't send it to avoid\n        // sending unnecessary bytes.\n        //\n        // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n        var envelope = envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + req.body;\n        req.body = envelope;\n    }\n    return req;\n}\nexports.eventToSentryRequest = eventToSentryRequest;\n//# sourceMappingURL=request.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","sessionToSentryRequest","session","api","envelopeHeaders","JSON","stringify","sent_at","Date","toISOString","itemHeaders","type","body","url","getEnvelopeEndpointWithUrlEncodedAuth","eventToSentryRequest","event","useEnvelope","req","getStoreEndpointWithUrlEncodedAuth","event_id"]
}
