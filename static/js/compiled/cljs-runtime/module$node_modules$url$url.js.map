{
"version":3,
"file":"module$node_modules$url$url.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/url/url.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$url$url\"] = function(global,require,module,exports) {\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Url","href","path","pathname","query","search","hash","hostname","port","host","auth","slashes","protocol","urlParse","url","parseQueryString","slashesDenoteHost","util","isObject","u","parse","punycode","resolve","urlResolve","source","relative","resolveObject","urlResolveObject","format","urlFormat","obj","isString","prototype","call","protocolPattern","portPattern","simplePathPattern","unwise","concat","delims","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","Url.prototype.parse","TypeError","queryIndex","indexOf","splitter","uSplit","split","replace","slashRegex","join","rest","trim","length","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","hostEnd","i","hec","atSign","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","hostnameMaxLen","toASCII","p","ae","esc","encodeURIComponent","escape","qm","Url.prototype.format","Object","keys","stringify","charAt","Url.prototype.resolve","Url.prototype.resolveObject","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","removeAllDots","mustEndAbs","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","Url.prototype.parseHost"]
}
