{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$xhr.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/xhr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$xhr\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar utils_1 = require(\"@sentry/utils\");\nvar base_1 = require(\"./base\");\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        return this._sendRequest(core_1.eventToSentryRequest(event, this._api), event);\n    };\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendSession = function (session) {\n        return this._sendRequest(core_1.sessionToSentryRequest(session, this._api), session);\n    };\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    XHRTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer.add(new utils_1.SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState === 4) {\n                    var headers = {\n                        'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n                        'retry-after': request.getResponseHeader('Retry-After'),\n                    };\n                    _this._handleResponse({ requestType: sentryRequest.type, response: request, headers: headers, resolve: resolve, reject: reject });\n                }\n            };\n            request.open('POST', sentryRequest.url);\n            for (var header in _this.options.headers) {\n                if (_this.options.headers.hasOwnProperty(header)) {\n                    request.setRequestHeader(header, _this.options.headers[header]);\n                }\n            }\n            request.send(sentryRequest.body);\n        }));\n    };\n    return XHRTransport;\n}(base_1.BaseTransport));\nexports.XHRTransport = XHRTransport;\n//# sourceMappingURL=xhr.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","utils_1","XHRTransport","_super","apply","arguments","__extends","prototype","sendEvent","XHRTransport.prototype.sendEvent","event","_sendRequest","eventToSentryRequest","_api","sendSession","XHRTransport.prototype.sendSession","session","sessionToSentryRequest","XHRTransport.prototype._sendRequest","sentryRequest","originalPayload","_this","_isRateLimited","type","Promise","reject","reason","_disabledUntil","status","_buffer","add","SyncPromise","resolve","request","XMLHttpRequest","onreadystatechange","request.onreadystatechange","readyState","headers","getResponseHeader","_handleResponse","requestType","response","open","url","header","options","hasOwnProperty","setRequestHeader","send","body","base_1","BaseTransport"]
}
