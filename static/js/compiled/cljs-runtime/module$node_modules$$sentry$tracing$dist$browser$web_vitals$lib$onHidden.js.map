{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,wEAAf,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBrIC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,YAAc,CAAA,CAAlB,CACIC,eAAiB,CAAA,CADrB,CAEIC,WAAaA,QAAS,CAACC,KAAD,CAAQ,CAC9BH,WAAA,CAAc,CAACG,KAAD,CAAOC,SADS,CAFlC,CAKIC,aAAeA,QAAS,EAAG,CAC3BC,gBAAA,CAAiB,UAAjB,CAA6BJ,UAA7B,CAIAI,iBAAA,CAAiB,cAAjB,CAAiC,QAAS,EAAG,EAA7C,CAL2B,CAO/BV,QAAA,CAAQW,QAAR,CAAmBC,QAAS,CAACC,EAAD,CAAKC,IAAL,CAAW,CACtB,IAAK,EAAlB,GAAIA,IAAJ,GAAuBA,IAAvB,CAA8B,CAAA,CAA9B,CACKT,eAAL,GACII,YAAA,EACA,CAAAJ,cAAA,CAAiB,CAAA,CAFrB,CAIAK,iBAAA,CAAiB,kBAAjB;AAAqC,QAAS,CAACK,EAAD,CAAK,CAC3CC,EAAAA,CAAYD,EAAZC,CAAeA,SACc,SAAjC,GAAIC,QAAJ,CAAaC,eAAb,EACIL,EAAA,CAAG,CAAEG,UAAWA,EAAb,CAAqCZ,WAArC,CAAH,CAH2C,CAAnD,CAKG,CAAEe,QAAS,CAAA,CAAX,CAAuBL,IAAvB,CALH,CANmC,CA7B8F;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/lib/onHidden.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isUnloading = false;\nvar listenersAdded = false;\nvar onPageHide = function (event) {\n    isUnloading = !event.persisted;\n};\nvar addListeners = function () {\n    addEventListener('pagehide', onPageHide);\n    // `beforeunload` is needed to fix this bug:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=987409\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    addEventListener('beforeunload', function () { });\n};\nexports.onHidden = function (cb, once) {\n    if (once === void 0) { once = false; }\n    if (!listenersAdded) {\n        addListeners();\n        listenersAdded = true;\n    }\n    addEventListener('visibilitychange', function (_a) {\n        var timeStamp = _a.timeStamp;\n        if (document.visibilityState === 'hidden') {\n            cb({ timeStamp: timeStamp, isUnloading: isUnloading });\n        }\n    }, { capture: true, once: once });\n};\n//# sourceMappingURL=onHidden.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","isUnloading","listenersAdded","onPageHide","event","persisted","addListeners","addEventListener","onHidden","exports.onHidden","cb","once","_a","timeStamp","document","visibilityState","capture"]
}
