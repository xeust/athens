{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$browser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,KAAON,OAAA,CAAQ,2CAAR,CA0CXE,QAAA,CAAQK,gBAAR,CAnCAA,QAAyB,CAACC,aAAD,CAAO,CAK5B,GAAI,CAWA,IAPA,IAAIC,IAAM,EAAV,CACIC,OAAS,CADb,CAEIC,IAAM,CAFV,CAKIC,QAAU,IAAK,EAEnB,CAAOC,aAAP,EAT0BC,CAS1B,CAAsBJ,MAAA,EAAtB,CAAA,CAAsD,CAgC1D,IAAIK,EAAAA,IAAAA,EAAJ,CADIC,KAAAA,IAAAA,EACJ,CAFIC,IAAAA,IAAAA,EAEJ,CAHIC,QAAAA,IAAAA,EAGJ,CAJIC,UAAAA,IAAAA,EAIJ,CANIX,KAzBmCK,aA+BvC,CALIJ,aAAM,EAMV,IAAKD,IAAL,EAAcA,IAAd,CAAmBY,OAAnB,CAAA,CAGAX,YAAA,CAAIY,IAAJ,CAASb,IAAA,CAAKY,OAAL,CAAaE,WAAb,EAAT,CACId;IAAJ,CAASe,EAAT,EACId,YAAA,CAAIY,IAAJ,CAAS,GAAT,CAAeb,IAAf,CAAoBe,EAApB,CAIJ,KADAJ,SACA,CADYX,IACZ,CADiBW,SACjB,GAAiBb,IAAA,CAAKkB,QAAL,CAAcL,SAAd,CAAjB,CAEI,IADAD,OACK,CADKC,SAAA,CAAUM,KAAV,CAAgB,KAAhB,CACL,CAAAV,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBG,OAAhB,CAAwBQ,MAAxB,CAAgCX,CAAA,EAAhC,CACIN,YAAA,CAAIY,IAAJ,CAAS,GAAT,CAAeH,OAAA,CAAQH,CAAR,CAAf,CAGJY,QAAAA,CAAe,CAAC,MAAD,CAAS,MAAT,CAAiB,OAAjB,CAA0B,KAA1B,CACnB,KAAKZ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBY,OAAhB,CAA6BD,MAA7B,CAAqCX,CAAA,EAArC,CACIE,GAEA,CAFMU,OAAA,CAAaZ,CAAb,CAEN,EADAC,IACA,CADOR,IAAA,CAAKoB,YAAL,CAAkBX,GAAlB,CACP,GACIR,YAAA,CAAIY,IAAJ,CAAS,GAAT,CAAeJ,GAAf,CAAqB,OAArB,CAA6BD,IAA7B,CAAoC,IAApC,CAGR,QAAA,CAAOP,YAAA,CAAIoB,IAAJ,CAAS,EAAT,CAvBP,CAAA,IACI,QAAA,CAAO,EA5BH,IAAgB,MAAhB,GAAIjB,OAAJ,EAAoC,CAApC,CAA2BF,MAA3B,EAdiBoB,EAcjB,EAAyCnB,GAAzC,CATYe,CASZ,CAA+CjB,GAA/C,CAAmDiB,MAAnD,CAAwEd,OAAxE,CAAgFc,MAAhF,CACI,KAEJjB,IAAA,CAAIY,IAAJ,CAAST,OAAT,CACAD,IAAA,EAAOC,OAAP,CAAec,MACfb;aAAA,CAAcA,aAAd,CAA0BkB,UAXwB,CAatD,MAAOtB,IAAA,CAAIuB,OAAJ,EAAA,CAAcH,IAAd,CAjBSI,QAiBT,CAxBP,CA0BJ,MAAOC,GAAP,CAAY,CACR,MAAO,iBADC,CA/BgB,CAT2E;",
"sources":["node_modules/@sentry/utils/dist/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$browser\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_1 = require(\"./is\");\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n        var currentElem = elem;\n        var MAX_TRAVERSE_HEIGHT = 5;\n        var MAX_OUTPUT_LEN = 80;\n        var out = [];\n        var height = 0;\n        var len = 0;\n        var separator = ' > ';\n        var sepLength = separator.length;\n        var nextStr = void 0;\n        // eslint-disable-next-line no-plusplus\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n            nextStr = _htmlElementAsString(currentElem);\n            // bail out if\n            // - nextStr is the 'html' element\n            // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n            //   (ignore this limit if we are on the first iteration)\n            if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n                break;\n            }\n            out.push(nextStr);\n            len += nextStr.length;\n            currentElem = currentElem.parentNode;\n        }\n        return out.reverse().join(separator);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\nexports.htmlTreeAsString = htmlTreeAsString;\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el) {\n    var elem = el;\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && is_1.isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var allowedAttrs = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < allowedAttrs.length; i++) {\n        key = allowedAttrs[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=browser.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","is_1","htmlTreeAsString","elem","out","height","len","nextStr","currentElem","MAX_TRAVERSE_HEIGHT","i","attr","key","classes","className","tagName","push","toLowerCase","id","isString","split","length","allowedAttrs","getAttribute","join","MAX_OUTPUT_LEN","parentNode","reverse","separator","_oO"]
}
