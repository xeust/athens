{
"version":3,
"file":"goog.dom.selection.js",
"lineCount":225,
"mappings":"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",
"sources":["goog/dom/selection.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for working with selections in input boxes and text\n * areas.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @see ../demos/dom_selection.html\n */\n\n\ngoog.provide('goog.dom.selection');\n\ngoog.require('goog.dom.InputType');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\n\n\n/**\n * Sets the place where the selection should start inside a textarea or a text\n * input\n * @param {Element} textfield A textarea or text input.\n * @param {number} pos The position to set the start of the selection at.\n */\ngoog.dom.selection.setStart = function(textfield, pos) {\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    textfield.selectionStart = pos;\n  } else if (goog.dom.selection.isLegacyIe_()) {\n    // destructuring assignment would have been sweet\n    var tmp = goog.dom.selection.getRangeIe_(textfield);\n    var range = tmp[0];\n    var selectionRange = tmp[1];\n\n    if (range.inRange(selectionRange)) {\n      pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);\n\n      range.collapse(true);\n      range.move('character', pos);\n      range.select();\n    }\n  }\n};\n\n\n/**\n * Return the place where the selection starts inside a textarea or a text\n * input\n * @param {Element} textfield A textarea or text input.\n * @return {number} The position where the selection starts or 0 if it was\n *     unable to find the position or no selection exists. Note that we can't\n *     reliably tell the difference between an element that has no selection and\n *     one where it starts at 0.\n */\ngoog.dom.selection.getStart = function(textfield) {\n  return goog.dom.selection.getEndPoints_(textfield, true)[0];\n};\n\n\n/**\n * Returns the start and end points of the selection within a textarea in IE.\n * IE treats newline characters as \\r\\n characters, and we need to check for\n * these characters at the edge of our selection, to ensure that we return the\n * right cursor position.\n * @param {TextRange} range Complete range object, e.g., \"Hello\\r\\n\".\n * @param {TextRange} selRange Selected range object.\n * @param {boolean} getOnlyStart Value indicating if only start\n *     cursor position is to be returned. In IE, obtaining the end position\n *     involves extra work, hence we have this parameter for calls which need\n *     only start position.\n * @return {!Array<number>} An array with the start and end positions where the\n *     selection starts and ends or [0,0] if it was unable to find the\n *     positions or no selection exists. Note that we can't reliably tell the\n *     difference between an element that has no selection and one where\n *     it starts and ends at 0. If getOnlyStart was true, we return\n *     -1 as end offset.\n * @private\n */\ngoog.dom.selection.getEndPointsTextareaIe_ = function(\n    range, selRange, getOnlyStart) {\n  // Create a duplicate of the selected range object to perform our actions\n  // against. Example of selectionRange = \"\" (assuming that the cursor is\n  // just after the \\r\\n combination)\n  var selectionRange = selRange.duplicate();\n\n  // Text before the selection start, e.g.,\"Hello\" (notice how range.text\n  // excludes the \\r\\n sequence)\n  var beforeSelectionText = range.text;\n  // Text before the selection start, e.g., \"Hello\" (this will later include\n  // the \\r\\n sequences also)\n  var untrimmedBeforeSelectionText = beforeSelectionText;\n  // Text within the selection , e.g. \"\" assuming that the cursor is just after\n  // the \\r\\n combination.\n  var selectionText = selectionRange.text;\n  // Text within the selection, e.g.,  \"\" (this will later include the \\r\\n\n  // sequences also)\n  var untrimmedSelectionText = selectionText;\n\n  // Boolean indicating whether we are done dealing with the text before the\n  // selection's beginning.\n  var isRangeEndTrimmed = false;\n  // Go over the range until it becomes a 0-lengthed range or until the range\n  // text starts changing when we move the end back by one character.\n  // If after moving the end back by one character, the text remains the same,\n  // then we need to add a \"\\r\\n\" at the end to get the actual text.\n  while (!isRangeEndTrimmed) {\n    if (range.compareEndPoints('StartToEnd', range) == 0) {\n      isRangeEndTrimmed = true;\n    } else {\n      range.moveEnd('character', -1);\n      if (range.text == beforeSelectionText) {\n        // If the start position of the cursor was after a \\r\\n string,\n        // we would skip over it in one go with the moveEnd call, but\n        // range.text will still show \"Hello\" (because of the IE range.text\n        // bug) - this implies that we should add a \\r\\n to our\n        // untrimmedBeforeSelectionText string.\n        untrimmedBeforeSelectionText += '\\r\\n';\n      } else {\n        isRangeEndTrimmed = true;\n      }\n    }\n  }\n\n  if (getOnlyStart) {\n    // We return -1 as end, since the caller is only interested in the start\n    // value.\n    return [untrimmedBeforeSelectionText.length, -1];\n  }\n  // Boolean indicating whether we are done dealing with the text inside the\n  // selection.\n  var isSelectionRangeEndTrimmed = false;\n  // Go over the selected range until it becomes a 0-lengthed range or until\n  // the range text starts changing when we move the end back by one character.\n  // If after moving the end back by one character, the text remains the same,\n  // then we need to add a \"\\r\\n\" at the end to get the actual text.\n  while (!isSelectionRangeEndTrimmed) {\n    if (selectionRange.compareEndPoints('StartToEnd', selectionRange) == 0) {\n      isSelectionRangeEndTrimmed = true;\n    } else {\n      selectionRange.moveEnd('character', -1);\n      if (selectionRange.text == selectionText) {\n        // If the selection was not empty, and the end point of the selection\n        // was just after a \\r\\n, we would have skipped it in one go with the\n        // moveEnd call, and this implies that we should add a \\r\\n to the\n        // untrimmedSelectionText string.\n        untrimmedSelectionText += '\\r\\n';\n      } else {\n        isSelectionRangeEndTrimmed = true;\n      }\n    }\n  }\n  return [\n    untrimmedBeforeSelectionText.length,\n    untrimmedBeforeSelectionText.length + untrimmedSelectionText.length\n  ];\n};\n\n\n/**\n * Returns the start and end points of the selection inside a textarea or a\n * text input.\n * @param {Element} textfield A textarea or text input.\n * @return {!Array<number>} An array with the start and end positions where the\n *     selection starts and ends or [0,0] if it was unable to find the\n *     positions or no selection exists. Note that we can't reliably tell the\n *     difference between an element that has no selection and one where\n *     it starts and ends at 0.\n */\ngoog.dom.selection.getEndPoints = function(textfield) {\n  return goog.dom.selection.getEndPoints_(textfield, false);\n};\n\n\n/**\n * Returns the start and end points of the selection inside a textarea or a\n * text input.\n * @param {Element} textfield A textarea or text input.\n * @param {boolean} getOnlyStart Value indicating if only start\n *     cursor position is to be returned. In IE, obtaining the end position\n *     involves extra work, hence we have this parameter. In FF, there is not\n *     much extra effort involved.\n * @return {!Array<number>} An array with the start and end positions where the\n *     selection starts and ends or [0,0] if it was unable to find the\n *     positions or no selection exists. Note that we can't reliably tell the\n *     difference between an element that has no selection and one where\n *     it starts and ends at 0. If getOnlyStart was true, we return\n *     -1 as end offset.\n * @private\n */\ngoog.dom.selection.getEndPoints_ = function(textfield, getOnlyStart) {\n  textfield = /** @type {!HTMLInputElement|!HTMLTextAreaElement} */ (textfield);\n  var startPos = 0;\n  var endPos = 0;\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    startPos = textfield.selectionStart;\n    endPos = getOnlyStart ? -1 : textfield.selectionEnd;\n  } else if (goog.dom.selection.isLegacyIe_()) {\n    var tmp = goog.dom.selection.getRangeIe_(textfield);\n    var range = tmp[0];\n    var selectionRange = tmp[1];\n\n    if (range.inRange(selectionRange)) {\n      range.setEndPoint('EndToStart', selectionRange);\n      if (textfield.type == goog.dom.InputType.TEXTAREA) {\n        return goog.dom.selection.getEndPointsTextareaIe_(\n            range, selectionRange, getOnlyStart);\n      }\n      startPos = range.text.length;\n      if (!getOnlyStart) {\n        endPos = range.text.length + selectionRange.text.length;\n      } else {\n        endPos = -1;  // caller did not ask for end position\n      }\n    }\n  }\n  return [startPos, endPos];\n};\n\n\n/**\n * Sets the place where the selection should end inside a text area or a text\n * input\n * @param {Element} textfield A textarea or text input.\n * @param {number} pos The position to end the selection at.\n */\ngoog.dom.selection.setEnd = function(textfield, pos) {\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    textfield.selectionEnd = pos;\n  } else if (goog.dom.selection.isLegacyIe_()) {\n    var tmp = goog.dom.selection.getRangeIe_(textfield);\n    var range = tmp[0];\n    var selectionRange = tmp[1];\n\n    if (range.inRange(selectionRange)) {\n      // Both the current position and the start cursor position need\n      // to be canonicalized to take care of possible \\r\\n miscounts.\n      pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);\n      var startCursorPos = goog.dom.selection.canonicalizePositionIe_(\n          textfield, goog.dom.selection.getStart(textfield));\n\n      selectionRange.collapse(true);\n      selectionRange.moveEnd('character', pos - startCursorPos);\n      selectionRange.select();\n    }\n  }\n};\n\n\n/**\n * Returns the place where the selection ends inside a textarea or a text input\n * @param {Element} textfield A textarea or text input.\n * @return {number} The position where the selection ends or 0 if it was\n *     unable to find the position or no selection exists.\n */\ngoog.dom.selection.getEnd = function(textfield) {\n  return goog.dom.selection.getEndPoints_(textfield, false)[1];\n};\n\n\n/**\n * Sets the cursor position within a textfield.\n * @param {Element} textfield A textarea or text input.\n * @param {number} pos The position within the text field.\n */\ngoog.dom.selection.setCursorPosition = function(textfield, pos) {\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    // Mozilla directly supports this\n    textfield.selectionStart = pos;\n    textfield.selectionEnd = pos;\n\n  } else if (goog.dom.selection.isLegacyIe_()) {\n    pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);\n\n    // IE has textranges. A textfield's textrange encompasses the\n    // entire textfield's text by default\n    var sel = textfield.createTextRange();\n\n    sel.collapse(true);\n    sel.move('character', pos);\n    sel.select();\n  }\n};\n\n\n/**\n * Sets the selected text inside a textarea or a text input\n * @param {Element} textfield A textarea or text input.\n * @param {string} text The text to change the selection to.\n */\ngoog.dom.selection.setText = function(textfield, text) {\n  textfield = /** @type {!HTMLInputElement|!HTMLTextAreaElement} */ (textfield);\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    var value = textfield.value;\n    var oldSelectionStart = textfield.selectionStart;\n    var before = value.substr(0, oldSelectionStart);\n    var after = value.substr(textfield.selectionEnd);\n    textfield.value = before + text + after;\n    textfield.selectionStart = oldSelectionStart;\n    textfield.selectionEnd = oldSelectionStart + text.length;\n  } else if (goog.dom.selection.isLegacyIe_()) {\n    var tmp = goog.dom.selection.getRangeIe_(textfield);\n    var range = tmp[0];\n    var selectionRange = tmp[1];\n\n    if (!range.inRange(selectionRange)) {\n      return;\n    }\n    // When we set the selection text the selection range is collapsed to the\n    // end. We therefore duplicate the current selection so we know where it\n    // started. Once we've set the selection text we move the start of the\n    // selection range to the old start\n    var range2 = selectionRange.duplicate();\n    selectionRange.text = text;\n    selectionRange.setEndPoint('StartToStart', range2);\n    selectionRange.select();\n  } else {\n    throw new Error('Cannot set the selection end');\n  }\n};\n\n\n/**\n * Returns the selected text inside a textarea or a text input\n * @param {Element} textfield A textarea or text input.\n * @return {string} The selected text.\n */\ngoog.dom.selection.getText = function(textfield) {\n  textfield = /** @type {!HTMLInputElement|!HTMLTextAreaElement} */ (textfield);\n  if (goog.dom.selection.useSelectionProperties_(textfield)) {\n    var s = textfield.value;\n    return s.substring(textfield.selectionStart, textfield.selectionEnd);\n  }\n\n  if (goog.dom.selection.isLegacyIe_()) {\n    var tmp = goog.dom.selection.getRangeIe_(textfield);\n    var range = tmp[0];\n    var selectionRange = tmp[1];\n\n    if (!range.inRange(selectionRange)) {\n      return '';\n    } else if (textfield.type == goog.dom.InputType.TEXTAREA) {\n      return goog.dom.selection.getSelectionRangeText_(selectionRange);\n    }\n    return selectionRange.text;\n  }\n\n  throw new Error('Cannot get the selection text');\n};\n\n\n/**\n * Returns the selected text within a textarea in IE.\n * IE treats newline characters as \\r\\n characters, and we need to check for\n * these characters at the edge of our selection, to ensure that we return the\n * right string.\n * @param {TextRange} selRange Selected range object.\n * @return {string} Selected text in the textarea.\n * @private\n */\ngoog.dom.selection.getSelectionRangeText_ = function(selRange) {\n  // Create a duplicate of the selected range object to perform our actions\n  // against. Suppose the text in the textarea is \"Hello\\r\\nWorld\" and the\n  // selection encompasses the \"o\\r\\n\" bit, initial selectionRange will be \"o\"\n  // (assuming that the cursor is just after the \\r\\n combination)\n  var selectionRange = selRange.duplicate();\n\n  // Text within the selection , e.g. \"o\" assuming that the cursor is just after\n  // the \\r\\n combination.\n  var selectionText = selectionRange.text;\n  // Text within the selection, e.g.,  \"o\" (this will later include the \\r\\n\n  // sequences also)\n  var untrimmedSelectionText = selectionText;\n\n  // Boolean indicating whether we are done dealing with the text inside the\n  // selection.\n  var isSelectionRangeEndTrimmed = false;\n  // Go over the selected range until it becomes a 0-lengthed range or until\n  // the range text starts changing when we move the end back by one character.\n  // If after moving the end back by one character, the text remains the same,\n  // then we need to add a \"\\r\\n\" at the end to get the actual text.\n  while (!isSelectionRangeEndTrimmed) {\n    if (selectionRange.compareEndPoints('StartToEnd', selectionRange) == 0) {\n      isSelectionRangeEndTrimmed = true;\n    } else {\n      selectionRange.moveEnd('character', -1);\n      if (selectionRange.text == selectionText) {\n        // If the selection was not empty, and the end point of the selection\n        // was just after a \\r\\n, we would have skipped it in one go with the\n        // moveEnd call, and this implies that we should add a \\r\\n to the\n        // untrimmedSelectionText string.\n        untrimmedSelectionText += '\\r\\n';\n      } else {\n        isSelectionRangeEndTrimmed = true;\n      }\n    }\n  }\n  return untrimmedSelectionText;\n};\n\n\n/**\n * Helper function for returning the range for an object as well as the\n * selection range\n * @private\n * @param {Element} el The element to get the range for.\n * @return {!Array<TextRange>} Range of object and selection range in two\n *     element array.\n */\ngoog.dom.selection.getRangeIe_ = function(el) {\n  var doc = el.ownerDocument || el.document;\n\n  var selectionRange = doc.selection.createRange();\n  // el.createTextRange() doesn't work on textareas\n  var range;\n\n  if (/** @type {?} */ (el).type == goog.dom.InputType.TEXTAREA) {\n    range = doc.body.createTextRange();\n    range.moveToElementText(el);\n  } else {\n    range = el.createTextRange();\n  }\n\n  return [range, selectionRange];\n};\n\n\n/**\n * Helper function for canonicalizing a position inside a textfield in IE.\n * Deals with the issue that \\r\\n counts as 2 characters, but\n * move('character', n) passes over both characters in one move.\n * @private\n * @param {Element} textfield The text element.\n * @param {number} pos The position desired in that element.\n * @return {number} The canonicalized position that will work properly with\n *     move('character', pos).\n */\ngoog.dom.selection.canonicalizePositionIe_ = function(textfield, pos) {\n  textfield = /** @type {!HTMLTextAreaElement} */ (textfield);\n  if (textfield.type == goog.dom.InputType.TEXTAREA) {\n    // We do this only for textarea because it is the only one which can\n    // have a \\r\\n (input cannot have this).\n    var value = textfield.value.substring(0, pos);\n    pos = goog.string.canonicalizeNewlines(value).length;\n  }\n  return pos;\n};\n\n\n/**\n * Helper function to determine whether it's okay to use\n * selectionStart/selectionEnd.\n *\n * @param {Element} el The element to check for.\n * @return {boolean} Whether it's okay to use the selectionStart and\n *     selectionEnd properties on `el`.\n * @private\n */\ngoog.dom.selection.useSelectionProperties_ = function(el) {\n  try {\n    return typeof el.selectionStart == 'number';\n  } catch (e) {\n    // Firefox throws an exception if you try to access selectionStart\n    // on an element with display: none.\n    return false;\n  }\n};\n\n\n/**\n * Whether the client is legacy IE which does not support\n * selectionStart/selectionEnd properties of a text input element.\n *\n * @see https://msdn.microsoft.com/en-us/library/ff974768(v=vs.85).aspx\n *\n * @return {boolean} Whether the client is a legacy version of IE.\n * @private\n */\ngoog.dom.selection.isLegacyIe_ = function() {\n  return goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9');\n};\n"],
"names":["goog","provide","require","dom","selection","setStart","goog.dom.selection.setStart","textfield","pos","useSelectionProperties_","selectionStart","isLegacyIe_","tmp","getRangeIe_","range","selectionRange","inRange","canonicalizePositionIe_","collapse","move","select","getStart","goog.dom.selection.getStart","getEndPoints_","getEndPointsTextareaIe_","goog.dom.selection.getEndPointsTextareaIe_","selRange","getOnlyStart","duplicate","beforeSelectionText","text","untrimmedBeforeSelectionText","selectionText","untrimmedSelectionText","isRangeEndTrimmed","compareEndPoints","moveEnd","length","isSelectionRangeEndTrimmed","getEndPoints","goog.dom.selection.getEndPoints","goog.dom.selection.getEndPoints_","startPos","endPos","selectionEnd","setEndPoint","type","InputType","TEXTAREA","setEnd","goog.dom.selection.setEnd","startCursorPos","getEnd","goog.dom.selection.getEnd","setCursorPosition","goog.dom.selection.setCursorPosition","sel","createTextRange","setText","goog.dom.selection.setText","value","oldSelectionStart","before","substr","after","range2","Error","getText","goog.dom.selection.getText","s","substring","getSelectionRangeText_","goog.dom.selection.getSelectionRangeText_","goog.dom.selection.getRangeIe_","el","doc","ownerDocument","document","createRange","body","moveToElementText","goog.dom.selection.canonicalizePositionIe_","string","canonicalizeNewlines","goog.dom.selection.useSelectionProperties_","e","goog.dom.selection.isLegacyIe_","userAgent","IE","isVersionOrHigher"]
}
