{
"version":3,
"file":"module$node_modules$hyphenate_style_name$index_cjs.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,kDAAf,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQ/GC,QAASA,cAAa,CAACC,KAAD,CAAQ,CAC5B,MAAO,GAAP,CAAaA,KAAA,CAAMC,WAAN,EADe,CAJ9B,IAAIC,iBAAmB,QAAvB,CACIC,UAAY,MADhB,CAEIC,MAAQ,EAeZP,OAAA,CAAOC,OAAP,CATAO,QAA2B,CAACC,IAAD,CAAO,CAChC,GAAIF,KAAA,CAAMG,cAAN,CAAqBD,IAArB,CAAJ,CACE,MAAOF,MAAA,CAAME,IAAN,CAGT,KAAIE,MAAQF,IAAA,CAAKG,OAAL,CAAaP,gBAAb,CAA+BH,aAA/B,CACZ,OAAQK,MAAA,CAAME,IAAN,CAAR,CAAsBH,SAAA,CAAUO,IAAV,CAAeF,KAAf,CAAA,CAAwB,GAAxB,CAA8BA,KAA9B,CAAsCA,KAN5B,CAZ6E;",
"sources":["node_modules/hyphenate-style-name/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hyphenate_style_name$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\n/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nmodule.exports = hyphenateStyleName;\n\n};"],
"names":["shadow$provide","global","require","module","exports","toHyphenLower","match","toLowerCase","uppercasePattern","msPattern","cache","hyphenateStyleName","name","hasOwnProperty","hName","replace","test"]
}
